{"ast":null,"code":"var _jsxFileName = \"C:\\\\water\\\\chemical-dispersion-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js (Completed and fixed: Added missing closing for if statement, ensured all imports match available components, fixed prop names)\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport DispersionMap from './components/Map/DispersionMap';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport { apiService } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentView, setCurrentView] = useState('dashboard'); // Assigned but unused - consider removing if not needed\n\n  useEffect(() => {\n    loadActiveSpills();\n  }, []);\n  const loadActiveSpills = async () => {\n    try {\n      setLoading(true);\n      const spills = await apiService.getAllSpills();\n      setActiveSpills(spills.filter(spill => spill.status === 'ACTIVE'));\n    } catch (error) {\n      console.error('Error loading spills:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSpillCreated = newSpill => {\n    setActiveSpills(prev => [...prev, newSpill]);\n    setSelectedSpill(newSpill);\n    setCurrentView('map');\n  };\n  const handleSpillSelected = spill => {\n    setSelectedSpill(spill);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this); // Completed the return statement\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {\n          spills: activeSpills,\n          onSpillSelect: handleSpillSelected,\n          onCreate: handleSpillCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/map\",\n        element: /*#__PURE__*/_jsxDEV(DispersionMap, {\n          spills: activeSpills,\n          selectedSpill: selectedSpill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/spill\",\n        element: /*#__PURE__*/_jsxDEV(SpillForm, {\n          onSpillCreated: handleSpillCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/weather\",\n        element: /*#__PURE__*/_jsxDEV(WeatherPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Odc91+uimqz3o/7pLlF9f4EHcHk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Toaster","Dashboard","DispersionMap","SpillForm","WeatherPanel","apiService","jsxDEV","_jsxDEV","App","_s","activeSpills","setActiveSpills","selectedSpill","setSelectedSpill","loading","setLoading","currentView","setCurrentView","loadActiveSpills","spills","getAllSpills","filter","spill","status","error","console","handleSpillCreated","newSpill","prev","handleSpillSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onSpillSelect","onCreate","onSpillCreated","to","replace","_c","$RefreshReg$"],"sources":["C:/water/chemical-dispersion-app/frontend/src/App.js"],"sourcesContent":["// src/App.js (Completed and fixed: Added missing closing for if statement, ensured all imports match available components, fixed prop names)\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport DispersionMap from './components/Map/DispersionMap';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport { apiService } from './services/api';\nimport './App.css';\n\nfunction App() {\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentView, setCurrentView] = useState('dashboard'); // Assigned but unused - consider removing if not needed\n\n  useEffect(() => {\n    loadActiveSpills();\n  }, []);\n\n  const loadActiveSpills = async () => {\n    try {\n      setLoading(true);\n      const spills = await apiService.getAllSpills();\n      setActiveSpills(spills.filter(spill => spill.status === 'ACTIVE'));\n    } catch (error) {\n      console.error('Error loading spills:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSpillCreated = (newSpill) => {\n    setActiveSpills(prev => [...prev, newSpill]);\n    setSelectedSpill(newSpill);\n    setCurrentView('map');\n  };\n\n  const handleSpillSelected = (spill) => {\n    setSelectedSpill(spill);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;  // Completed the return statement\n  }\n\n  return (\n    <Router>\n      <Toaster />\n      <Routes>\n        <Route path=\"/dashboard\" element={<Dashboard spills={activeSpills} onSpillSelect={handleSpillSelected} onCreate={handleSpillCreated} />} />\n        <Route path=\"/map\" element={<DispersionMap spills={activeSpills} selectedSpill={selectedSpill} />} />\n        <Route path=\"/spill\" element={<SpillForm onSpillCreated={handleSpillCreated} />} />\n        <Route path=\"/weather\" element={<WeatherPanel />} />\n        <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n        <Route path=\"*\" element={<Navigate to=\"/dashboard\" replace />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}