{"ast":null,"code":"var _jsxFileName = \"C:\\\\water\\\\chemical-dispersion-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport DispersionMap from './components/Map/DispersionMap';\nimport { apiService } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emergencyAlert, setEmergencyAlert] = useState(null);\n  const [systemStatus, setSystemStatus] = useState('online');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Load initial data and set up auto-refresh\n  useEffect(() => {\n    loadActiveSpills();\n    let refreshInterval;\n    if (autoRefresh) {\n      refreshInterval = setInterval(() => {\n        loadActiveSpills(false);\n      }, 60000);\n    }\n    const unsubscribe = apiService.subscribeToUpdates(updates => {\n      handleRealTimeUpdates(updates);\n    });\n    return () => {\n      if (refreshInterval) clearInterval(refreshInterval);\n      if (unsubscribe) unsubscribe();\n    };\n  }, [autoRefresh]);\n  const handleRealTimeUpdates = useCallback(updates => {\n    if (updates && updates.length > 0) {\n      updates.forEach(update => {\n        switch (update.type) {\n          case 'spill_created':\n            setActiveSpills(prev => [...prev, update.data]);\n            break;\n          case 'spill_updated':\n            setActiveSpills(prev => prev.map(spill => spill.id === update.data.id ? {\n              ...spill,\n              ...update.data\n            } : spill));\n            break;\n          case 'spill_status_changed':\n            setActiveSpills(prev => prev.map(spill => spill.id === update.spillId ? {\n              ...spill,\n              status: update.newStatus,\n              updatedAt: new Date().toISOString()\n            } : spill));\n            break;\n          case 'emergency_alert':\n            setEmergencyAlert(update.message);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }, []);\n  const loadActiveSpills = async (showLoadingState = true) => {\n    try {\n      if (showLoadingState) setLoading(true);\n      setSystemStatus('loading');\n      const spills = await apiService.getAllSpills();\n      const activeSpillsList = spills.filter(spill => spill.status === 'ACTIVE' || spill.status === 'CONTAINED');\n      setActiveSpills(activeSpillsList);\n      setLastUpdate(new Date());\n      setSystemStatus('online');\n      checkForEmergencyConditions(activeSpillsList);\n    } catch (error) {\n      console.error('Error loading spills:', error);\n      setSystemStatus('error');\n      const demoSpills = [{\n        id: 'demo-1',\n        name: 'Demo Oil Spill',\n        chemicalType: 'Crude Oil',\n        volume: 5000,\n        latitude: 29.7604,\n        longitude: -95.3698,\n        spillTime: new Date(Date.now() - 3600000).toISOString(),\n        status: 'ACTIVE',\n        priority: 'HIGH',\n        source: 'Pipeline Leak',\n        reporterName: 'System Demo',\n        reporterContact: 'demo@system.com'\n      }];\n      setActiveSpills(demoSpills);\n    } finally {\n      if (showLoadingState) setLoading(false);\n    }\n  };\n  const checkForEmergencyConditions = spills => {\n    const criticalSpills = spills.filter(spill => spill.volume > 10000 || spill.chemicalType.toLowerCase().includes('toxic') || spill.priority === 'CRITICAL' || spill.chemicalData && spill.chemicalData.hazardClass && spill.chemicalData.hazardClass.toLowerCase().includes('hazard'));\n    if (criticalSpills.length > 0) {\n      setEmergencyAlert(`${criticalSpills.length} critical incident(s) detected requiring immediate attention!`);\n    } else {\n      setEmergencyAlert(null);\n    }\n  };\n  const handleSpillCreated = useCallback(newSpill => {\n    setActiveSpills(prev => {\n      const exists = prev.some(spill => spill.id === newSpill.id);\n      if (exists) return prev.map(spill => spill.id === newSpill.id ? newSpill : spill);\n      return [...prev, newSpill];\n    });\n    setSelectedSpill(newSpill);\n    checkForEmergencyConditions([...activeSpills, newSpill]);\n  }, [activeSpills]);\n  const handleSpillSelected = useCallback(spill => {\n    setSelectedSpill(spill);\n  }, []);\n  const handleSpillUpdated = useCallback(updatedSpill => {\n    setActiveSpills(prev => prev.map(spill => spill.id === updatedSpill.id ? updatedSpill : spill));\n    if (selectedSpill && selectedSpill.id === updatedSpill.id) {\n      setSelectedSpill(updatedSpill);\n    }\n  }, [selectedSpill]);\n  const handleCalculateDispersion = async (spillId, simulationHours = 24) => {\n    try {\n      const result = await apiService.calculateDispersion(spillId, simulationHours);\n      setActiveSpills(prev => prev.map(spill => spill.id === spillId ? {\n        ...spill,\n        dispersionData: result.dispersionData,\n        lastCalculated: new Date().toISOString()\n      } : spill));\n      return result;\n    } catch (error) {\n      console.error('Error calculating dispersion:', error);\n      throw error;\n    }\n  };\n  const handleStatusUpdate = async (spillId, newStatus) => {\n    try {\n      await apiService.updateSpillStatus(spillId, newStatus);\n      setActiveSpills(prev => prev.map(spill => spill.id === spillId ? {\n        ...spill,\n        status: newStatus,\n        updatedAt: new Date().toISOString()\n      } : spill));\n    } catch (error) {\n      console.error('Error updating spill status:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Initializing Chemical Dispersion System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading monitoring systems and data sources...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [emergencyAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emergency-banner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emergency-icon\",\n            children: \"\\uD83D\\uDEA8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emergency-text\",\n            children: emergencyAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"banner-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-light\",\n              onClick: () => setSelectedSpill(activeSpills.find(s => s.priority === 'CRITICAL' || s.volume > 10000)),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"banner-close\",\n              onClick: () => setEmergencyAlert(null),\n              \"aria-label\": \"Close emergency alert\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FloatingPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"app-main\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              spills: activeSpills,\n              onSpillSelect: handleSpillSelected,\n              onSpillUpdate: handleSpillUpdated,\n              onStatusUpdate: handleStatusUpdate,\n              onCreate: handleSpillCreated,\n              systemStatus: systemStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/spill\",\n            element: /*#__PURE__*/_jsxDEV(SpillForm, {\n              onSpillCreated: handleSpillCreated,\n              existingSpills: activeSpills\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/weather\",\n            element: /*#__PURE__*/_jsxDEV(WeatherPanel, {\n              selectedLocation: selectedSpill ? {\n                lat: selectedSpill.latitude,\n                lng: selectedSpill.longitude\n              } : null,\n              autoRefresh: autoRefresh\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/map\",\n            element: /*#__PURE__*/_jsxDEV(DispersionMap, {\n              spills: activeSpills,\n              selectedSpill: selectedSpill,\n              onSpillSelect: handleSpillSelected,\n              onSpillUpdate: handleSpillUpdated,\n              onStatusUpdate: handleStatusUpdate,\n              calculateDispersion: handleCalculateDispersion,\n              autoRefresh: autoRefresh\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom Floating Panel Component\n_s(App, \"ywqPKs+JVBEKQTaaL5PZ53Ff0Ng=\");\n_c = App;\nfunction FloatingPanel() {\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"floating-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-bar\",\n      children: [/*#__PURE__*/_jsxDEV(FloatingNavLink, {\n        to: \"/dashboard\",\n        icon: \"\\uD83D\\uDCCA\",\n        label: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FloatingNavLink, {\n        to: \"/map\",\n        icon: \"\\uD83D\\uDDFA\\uFE0F\",\n        label: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FloatingNavLink, {\n        to: \"/weather\",\n        icon: \"\\uD83C\\uDF24\\uFE0F\",\n        label: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FloatingNavLink, {\n        to: \"/spill\",\n        icon: \"\\uD83D\\uDEA8\",\n        label: \"Report Incident\",\n        className: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n_c2 = FloatingPanel;\nfunction FloatingNavLink({\n  to,\n  icon,\n  label,\n  className = ''\n}) {\n  _s2();\n  const location = useLocation();\n  const isActive = location.pathname === to;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: `nav-item ${className} ${isActive ? 'active' : ''}`,\n    to: to,\n    title: label,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"nav-icon\",\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"nav-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_s2(FloatingNavLink, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c3 = FloatingNavLink;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"FloatingPanel\");\n$RefreshReg$(_c3, \"FloatingNavLink\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Routes","Route","Navigate","Link","useLocation","Dashboard","SpillForm","WeatherPanel","DispersionMap","apiService","jsxDEV","_jsxDEV","App","_s","activeSpills","setActiveSpills","selectedSpill","setSelectedSpill","loading","setLoading","emergencyAlert","setEmergencyAlert","systemStatus","setSystemStatus","lastUpdate","setLastUpdate","autoRefresh","setAutoRefresh","loadActiveSpills","refreshInterval","setInterval","unsubscribe","subscribeToUpdates","updates","handleRealTimeUpdates","clearInterval","length","forEach","update","type","prev","data","map","spill","id","spillId","status","newStatus","updatedAt","Date","toISOString","message","showLoadingState","spills","getAllSpills","activeSpillsList","filter","checkForEmergencyConditions","error","console","demoSpills","name","chemicalType","volume","latitude","longitude","spillTime","now","priority","source","reporterName","reporterContact","criticalSpills","toLowerCase","includes","chemicalData","hazardClass","handleSpillCreated","newSpill","exists","some","handleSpillSelected","handleSpillUpdated","updatedSpill","handleCalculateDispersion","simulationHours","result","calculateDispersion","dispersionData","lastCalculated","handleStatusUpdate","updateSpillStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","find","s","FloatingPanel","path","element","onSpillSelect","onSpillUpdate","onStatusUpdate","onCreate","onSpillCreated","existingSpills","selectedLocation","lat","lng","to","replace","_c","FloatingNavLink","icon","label","_c2","_s2","location","isActive","pathname","title","_c3","$RefreshReg$"],"sources":["C:/water/chemical-dispersion-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport DispersionMap from './components/Map/DispersionMap';\nimport { apiService } from './services/api';\nimport './App.css';\n\nfunction App() {\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emergencyAlert, setEmergencyAlert] = useState(null);\n  const [systemStatus, setSystemStatus] = useState('online');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Load initial data and set up auto-refresh\n  useEffect(() => {\n    loadActiveSpills();\n    \n    let refreshInterval;\n    if (autoRefresh) {\n      refreshInterval = setInterval(() => {\n        loadActiveSpills(false);\n      }, 60000);\n    }\n    \n    const unsubscribe = apiService.subscribeToUpdates((updates) => {\n      handleRealTimeUpdates(updates);\n    });\n\n    return () => {\n      if (refreshInterval) clearInterval(refreshInterval);\n      if (unsubscribe) unsubscribe();\n    };\n  }, [autoRefresh]);\n\n  const handleRealTimeUpdates = useCallback((updates) => {\n    if (updates && updates.length > 0) {\n      updates.forEach(update => {\n        switch (update.type) {\n          case 'spill_created':\n            setActiveSpills(prev => [...prev, update.data]);\n            break;\n          case 'spill_updated':\n            setActiveSpills(prev => \n              prev.map(spill => \n                spill.id === update.data.id ? { ...spill, ...update.data } : spill\n              )\n            );\n            break;\n          case 'spill_status_changed':\n            setActiveSpills(prev => \n              prev.map(spill => \n                spill.id === update.spillId \n                  ? { ...spill, status: update.newStatus, updatedAt: new Date().toISOString() }\n                  : spill\n              )\n            );\n            break;\n          case 'emergency_alert':\n            setEmergencyAlert(update.message);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }, []);\n\n  const loadActiveSpills = async (showLoadingState = true) => {\n    try {\n      if (showLoadingState) setLoading(true);\n      setSystemStatus('loading');\n      \n      const spills = await apiService.getAllSpills();\n      const activeSpillsList = spills.filter(spill => \n        spill.status === 'ACTIVE' || spill.status === 'CONTAINED'\n      );\n      \n      setActiveSpills(activeSpillsList);\n      setLastUpdate(new Date());\n      setSystemStatus('online');\n\n      checkForEmergencyConditions(activeSpillsList);\n      \n    } catch (error) {\n      console.error('Error loading spills:', error);\n      setSystemStatus('error');\n      const demoSpills = [\n        {\n          id: 'demo-1',\n          name: 'Demo Oil Spill',\n          chemicalType: 'Crude Oil',\n          volume: 5000,\n          latitude: 29.7604,\n          longitude: -95.3698,\n          spillTime: new Date(Date.now() - 3600000).toISOString(),\n          status: 'ACTIVE',\n          priority: 'HIGH',\n          source: 'Pipeline Leak',\n          reporterName: 'System Demo',\n          reporterContact: 'demo@system.com'\n        }\n      ];\n      setActiveSpills(demoSpills);\n    } finally {\n      if (showLoadingState) setLoading(false);\n    }\n  };\n\n  const checkForEmergencyConditions = (spills) => {\n    const criticalSpills = spills.filter(spill => \n      spill.volume > 10000 || \n      spill.chemicalType.toLowerCase().includes('toxic') ||\n      spill.priority === 'CRITICAL' ||\n      (spill.chemicalData && spill.chemicalData.hazardClass && \n       spill.chemicalData.hazardClass.toLowerCase().includes('hazard'))\n    );\n\n    if (criticalSpills.length > 0) {\n      setEmergencyAlert(`${criticalSpills.length} critical incident(s) detected requiring immediate attention!`);\n    } else {\n      setEmergencyAlert(null);\n    }\n  };\n\n  const handleSpillCreated = useCallback((newSpill) => {\n    setActiveSpills(prev => {\n      const exists = prev.some(spill => spill.id === newSpill.id);\n      if (exists) return prev.map(spill => spill.id === newSpill.id ? newSpill : spill);\n      return [...prev, newSpill];\n    });\n    setSelectedSpill(newSpill);\n    checkForEmergencyConditions([...activeSpills, newSpill]);\n  }, [activeSpills]);\n\n  const handleSpillSelected = useCallback((spill) => {\n    setSelectedSpill(spill);\n  }, []);\n\n  const handleSpillUpdated = useCallback((updatedSpill) => {\n    setActiveSpills(prev => \n      prev.map(spill => \n        spill.id === updatedSpill.id ? updatedSpill : spill\n      )\n    );\n    if (selectedSpill && selectedSpill.id === updatedSpill.id) {\n      setSelectedSpill(updatedSpill);\n    }\n  }, [selectedSpill]);\n\n  const handleCalculateDispersion = async (spillId, simulationHours = 24) => {\n    try {\n      const result = await apiService.calculateDispersion(spillId, simulationHours);\n      setActiveSpills(prev => \n        prev.map(spill => \n          spill.id === spillId \n            ? { ...spill, dispersionData: result.dispersionData, lastCalculated: new Date().toISOString() }\n            : spill\n        )\n      );\n      return result;\n    } catch (error) {\n      console.error('Error calculating dispersion:', error);\n      throw error;\n    }\n  };\n\n  const handleStatusUpdate = async (spillId, newStatus) => {\n    try {\n      await apiService.updateSpillStatus(spillId, newStatus);\n      setActiveSpills(prev => \n        prev.map(spill => \n          spill.id === spillId \n            ? { ...spill, status: newStatus, updatedAt: new Date().toISOString() }\n            : spill\n        )\n      );\n    } catch (error) {\n      console.error('Error updating spill status:', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"app-loading\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <h2>Initializing Chemical Dispersion System</h2>\n          <p>Loading monitoring systems and data sources...</p>\n          <div className=\"loading-progress\">\n            <div className=\"progress-bar\">\n              <div className=\"progress-fill\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {emergencyAlert && (\n          <div className=\"emergency-banner\">\n            <div className=\"banner-content\">\n              <span className=\"emergency-icon\">🚨</span>\n              <span className=\"emergency-text\">{emergencyAlert}</span>\n              <div className=\"banner-actions\">\n                <button \n                  className=\"btn btn-sm btn-light\"\n                  onClick={() => setSelectedSpill(activeSpills.find(s => s.priority === 'CRITICAL' || s.volume > 10000))}\n                >\n                  View Details\n                </button>\n                <button \n                  className=\"banner-close\" \n                  onClick={() => setEmergencyAlert(null)}\n                  aria-label=\"Close emergency alert\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <FloatingPanel />\n\n        <main className=\"app-main\">\n          <Routes>\n            <Route \n              path=\"/dashboard\" \n              element={\n                <Dashboard \n                  spills={activeSpills} \n                  onSpillSelect={handleSpillSelected}\n                  onSpillUpdate={handleSpillUpdated}\n                  onStatusUpdate={handleStatusUpdate}\n                  onCreate={handleSpillCreated}\n                  systemStatus={systemStatus}\n                />\n              } \n            />\n            <Route \n              path=\"/spill\" \n              element={\n                <SpillForm \n                  onSpillCreated={handleSpillCreated}\n                  existingSpills={activeSpills}\n                />\n              } \n            />\n            <Route \n              path=\"/weather\" \n              element={\n                <WeatherPanel \n                  selectedLocation={selectedSpill ? {\n                    lat: selectedSpill.latitude, \n                    lng: selectedSpill.longitude\n                  } : null}\n                  autoRefresh={autoRefresh}\n                />\n              } \n            />\n            <Route \n              path=\"/map\" \n              element={\n                <DispersionMap \n                  spills={activeSpills}\n                  selectedSpill={selectedSpill}\n                  onSpillSelect={handleSpillSelected}\n                  onSpillUpdate={handleSpillUpdated}\n                  onStatusUpdate={handleStatusUpdate}\n                  calculateDispersion={handleCalculateDispersion}\n                  autoRefresh={autoRefresh}\n                />\n              } \n            />\n            <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n            <Route path=\"*\" element={<Navigate to=\"/dashboard\" replace />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\n// Custom Floating Panel Component\nfunction FloatingPanel() {\n  return (\n    <aside className=\"floating-panel\">\n      <div className=\"icon-bar\">\n        <FloatingNavLink to=\"/dashboard\" icon=\"📊\" label=\"Dashboard\" />\n        <FloatingNavLink to=\"/map\" icon=\"🗺️\" label=\"Map\" />\n        <FloatingNavLink to=\"/weather\" icon=\"🌤️\" label=\"Weather\" />\n        <FloatingNavLink to=\"/spill\" icon=\"🚨\" label=\"Report Incident\" className=\"primary\" />\n      </div>\n    </aside>\n  );\n}\n\nfunction FloatingNavLink({ to, icon, label, className = '' }) {\n  const location = useLocation();\n  const isActive = location.pathname === to;\n\n  return (\n    <Link \n      className={`nav-item ${className} ${isActive ? 'active' : ''}`} \n      to={to}\n      title={label}\n    >\n      <span className=\"nav-icon\">{icon}</span>\n      <span className=\"nav-label\">{label}</span>\n    </Link>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}