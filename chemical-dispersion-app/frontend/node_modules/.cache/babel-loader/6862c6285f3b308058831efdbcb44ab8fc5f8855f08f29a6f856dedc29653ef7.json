{"ast":null,"code":"var _jsxFileName = \"C:\\\\water\\\\chemical-dispersion-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport DispersionMap from './components/Map/DispersionMap';\nimport { apiService } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emergencyAlert, setEmergencyAlert] = useState(null);\n  useEffect(() => {\n    loadActiveSpills();\n  }, []);\n  const loadActiveSpills = async () => {\n    try {\n      setLoading(true);\n      const spills = await apiService.getAllSpills();\n      const activeSpillsList = spills.filter(spill => spill.status === 'ACTIVE');\n      setActiveSpills(activeSpillsList);\n\n      // Check for emergency level spills\n      const emergencySpills = activeSpillsList.filter(spill => spill.volume > 10000 || spill.chemicalType.toLowerCase().includes('toxic'));\n      if (emergencySpills.length > 0) {\n        setEmergencyAlert(`⚠️ ${emergencySpills.length} emergency level spill(s) detected!`);\n      }\n    } catch (error) {\n      console.error('Error loading spills:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSpillCreated = newSpill => {\n    setActiveSpills(prev => [...prev, newSpill]);\n    setSelectedSpill(newSpill);\n  };\n  const handleSpillSelected = spill => {\n    setSelectedSpill(spill);\n  };\n  const handleCalculateDispersion = async (spillId, simulationHours = 24) => {\n    try {\n      const result = await apiService.calculateDispersion(spillId, simulationHours);\n      console.log('Dispersion calculation result:', result);\n      return result;\n    } catch (error) {\n      console.error('Error calculating dispersion:', error);\n      throw error;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Initializing monitoring systems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [emergencyAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emergency-alert\",\n        children: emergencyAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {\n            activeSpills: activeSpills,\n            onSpillSelected: handleSpillSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/spill-form\",\n          element: /*#__PURE__*/_jsxDEV(SpillForm, {\n            onSpillCreated: handleSpillCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weather\",\n          element: /*#__PURE__*/_jsxDEV(WeatherPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/map\",\n          element: /*#__PURE__*/_jsxDEV(DispersionMap, {\n            selectedSpill: selectedSpill,\n            onCalculate: handleCalculateDispersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sUuFOiEF6yb9taEs8+yGVbU4feA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Dashboard","SpillForm","WeatherPanel","DispersionMap","apiService","jsxDEV","_jsxDEV","App","_s","activeSpills","setActiveSpills","selectedSpill","setSelectedSpill","loading","setLoading","emergencyAlert","setEmergencyAlert","loadActiveSpills","spills","getAllSpills","activeSpillsList","filter","spill","status","emergencySpills","volume","chemicalType","toLowerCase","includes","length","error","console","handleSpillCreated","newSpill","prev","handleSpillSelected","handleCalculateDispersion","spillId","simulationHours","result","calculateDispersion","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onSpillSelected","onSpillCreated","onCalculate","to","_c","$RefreshReg$"],"sources":["C:/water/chemical-dispersion-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport DispersionMap from './components/Map/DispersionMap';\nimport { apiService } from './services/api';\nimport './App.css';\n\nfunction App() {\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emergencyAlert, setEmergencyAlert] = useState(null);\n\n  useEffect(() => {\n    loadActiveSpills();\n  }, []);\n\n  const loadActiveSpills = async () => {\n    try {\n      setLoading(true);\n      const spills = await apiService.getAllSpills();\n      const activeSpillsList = spills.filter(spill => spill.status === 'ACTIVE');\n      setActiveSpills(activeSpillsList);\n\n      // Check for emergency level spills\n      const emergencySpills = activeSpillsList.filter(spill => \n        spill.volume > 10000 || spill.chemicalType.toLowerCase().includes('toxic')\n      );\n      if (emergencySpills.length > 0) {\n        setEmergencyAlert(`⚠️ ${emergencySpills.length} emergency level spill(s) detected!`);\n      }\n    } catch (error) {\n      console.error('Error loading spills:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSpillCreated = (newSpill) => {\n    setActiveSpills(prev => [...prev, newSpill]);\n    setSelectedSpill(newSpill);\n  };\n\n  const handleSpillSelected = (spill) => {\n    setSelectedSpill(spill);\n  };\n\n  const handleCalculateDispersion = async (spillId, simulationHours = 24) => {\n    try {\n      const result = await apiService.calculateDispersion(spillId, simulationHours);\n      console.log('Dispersion calculation result:', result);\n      return result;\n    } catch (error) {\n      console.error('Error calculating dispersion:', error);\n      throw error;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        Initializing monitoring systems\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        {emergencyAlert && <div className=\"emergency-alert\">{emergencyAlert}</div>}\n        <Routes>\n          <Route \n            path=\"/\" \n            element={<Dashboard activeSpills={activeSpills} onSpillSelected={handleSpillSelected} />} \n          />\n          <Route \n            path=\"/spill-form\" \n            element={<SpillForm onSpillCreated={handleSpillCreated} />} \n          />\n          <Route path=\"/weather\" element={<WeatherPanel />} />\n          <Route \n            path=\"/map\" \n            element={<DispersionMap selectedSpill={selectedSpill} onCalculate={handleCalculateDispersion} />} \n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}