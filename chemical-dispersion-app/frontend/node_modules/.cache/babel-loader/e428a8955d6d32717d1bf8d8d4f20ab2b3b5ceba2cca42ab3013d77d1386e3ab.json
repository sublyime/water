{"ast":null,"code":"var _jsxFileName = \"C:\\\\water\\\\chemical-dispersion-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport DispersionMap from './components/Map/DispersionMap';\nimport { apiService } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emergencyAlert, setEmergencyAlert] = useState(null);\n  const [systemStatus, setSystemStatus] = useState('online');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Load initial data and set up auto-refresh\n  useEffect(() => {\n    loadActiveSpills();\n\n    // Set up auto-refresh interval\n    let refreshInterval;\n    if (autoRefresh) {\n      refreshInterval = setInterval(() => {\n        loadActiveSpills(false); // Silent refresh\n      }, 60000); // Refresh every minute\n    }\n\n    // Set up real-time updates subscription\n    const unsubscribe = apiService.subscribeToUpdates(updates => {\n      handleRealTimeUpdates(updates);\n    });\n    return () => {\n      if (refreshInterval) clearInterval(refreshInterval);\n      if (unsubscribe) unsubscribe();\n    };\n  }, [autoRefresh]);\n\n  // Handle real-time updates\n  const handleRealTimeUpdates = useCallback(updates => {\n    if (updates && updates.length > 0) {\n      updates.forEach(update => {\n        switch (update.type) {\n          case 'spill_created':\n            setActiveSpills(prev => [...prev, update.data]);\n            showNotification(`New spill reported: ${update.data.name}`, 'info');\n            break;\n          case 'spill_updated':\n            setActiveSpills(prev => prev.map(spill => spill.id === update.data.id ? {\n              ...spill,\n              ...update.data\n            } : spill));\n            break;\n          case 'spill_status_changed':\n            setActiveSpills(prev => prev.map(spill => spill.id === update.spillId ? {\n              ...spill,\n              status: update.newStatus,\n              updatedAt: new Date().toISOString()\n            } : spill));\n            if (update.newStatus === 'CONTAINED') {\n              showNotification(`Spill ${update.spillId} marked as contained`, 'success');\n            }\n            break;\n          case 'emergency_alert':\n            setEmergencyAlert(update.message);\n            showNotification(update.message, 'error');\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }, []);\n\n  // Load active spills data\n  const loadActiveSpills = async (showLoadingState = true) => {\n    try {\n      if (showLoadingState) {\n        setLoading(true);\n      }\n      setSystemStatus('loading');\n      const spills = await apiService.getAllSpills();\n      const activeSpillsList = spills.filter(spill => spill.status === 'ACTIVE' || spill.status === 'CONTAINED');\n      setActiveSpills(activeSpillsList);\n      setLastUpdate(new Date());\n      setSystemStatus('online');\n\n      // Check for emergency level spills\n      checkForEmergencyConditions(activeSpillsList);\n    } catch (error) {\n      console.error('Error loading spills:', error);\n      setSystemStatus('error');\n      showNotification('Failed to load spill data. Using offline mode.', 'warning');\n\n      // Try to use cached data or show empty state\n      if (activeSpills.length === 0) {\n        // Load demo data for development\n        const demoSpills = [{\n          id: 'demo-1',\n          name: 'Demo Oil Spill',\n          chemicalType: 'Crude Oil',\n          volume: 5000,\n          latitude: 29.7604,\n          longitude: -95.3698,\n          spillTime: new Date(Date.now() - 3600000).toISOString(),\n          // 1 hour ago\n          status: 'ACTIVE',\n          priority: 'HIGH',\n          source: 'Pipeline Leak',\n          reporterName: 'System Demo',\n          reporterContact: 'demo@system.com'\n        }];\n        setActiveSpills(demoSpills);\n      }\n    } finally {\n      if (showLoadingState) {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Check for emergency conditions\n  const checkForEmergencyConditions = spills => {\n    const criticalSpills = spills.filter(spill => spill.volume > 10000 || spill.chemicalType.toLowerCase().includes('toxic') || spill.priority === 'CRITICAL' || spill.chemicalData && spill.chemicalData.hazardClass && spill.chemicalData.hazardClass.toLowerCase().includes('hazard'));\n    if (criticalSpills.length > 0) {\n      const alertMessage = `${criticalSpills.length} critical incident(s) detected requiring immediate attention!`;\n      setEmergencyAlert(alertMessage);\n    } else {\n      setEmergencyAlert(null);\n    }\n  };\n\n  // Show notification (could be replaced with a proper notification system)\n  const showNotification = (message, type = 'info') => {\n    // Simple notification - could be enhanced with a proper notification library\n    console.log(`[${type.toUpperCase()}] ${message}`);\n\n    // For now, show critical notifications as alerts\n    if (type === 'error') {\n      setTimeout(() => {\n        alert(message);\n      }, 100);\n    }\n  };\n\n  // Handle spill creation\n  const handleSpillCreated = useCallback(newSpill => {\n    setActiveSpills(prev => {\n      // Avoid duplicates\n      const exists = prev.some(spill => spill.id === newSpill.id);\n      if (exists) {\n        return prev.map(spill => spill.id === newSpill.id ? newSpill : spill);\n      }\n      return [...prev, newSpill];\n    });\n    setSelectedSpill(newSpill);\n    showNotification(`New spill reported: ${newSpill.name}`, 'success');\n\n    // Check if this creates an emergency condition\n    checkForEmergencyConditions([...activeSpills, newSpill]);\n  }, [activeSpills]);\n\n  // Handle spill selection\n  const handleSpillSelected = useCallback(spill => {\n    setSelectedSpill(spill);\n  }, []);\n\n  // Handle spill updates\n  const handleSpillUpdated = useCallback(updatedSpill => {\n    setActiveSpills(prev => prev.map(spill => spill.id === updatedSpill.id ? updatedSpill : spill));\n    if (selectedSpill && selectedSpill.id === updatedSpill.id) {\n      setSelectedSpill(updatedSpill);\n    }\n    showNotification(`Spill ${updatedSpill.name} updated`, 'info');\n  }, [selectedSpill]);\n\n  // Handle dispersion calculation\n  const handleCalculateDispersion = async (spillId, simulationHours = 24) => {\n    try {\n      const result = await apiService.calculateDispersion(spillId, simulationHours);\n\n      // Update the spill with dispersion data\n      setActiveSpills(prev => prev.map(spill => spill.id === spillId ? {\n        ...spill,\n        dispersionData: result.dispersionData,\n        lastCalculated: new Date().toISOString()\n      } : spill));\n      showNotification('Dispersion calculation completed', 'success');\n      return result;\n    } catch (error) {\n      console.error('Error calculating dispersion:', error);\n      showNotification('Dispersion calculation failed', 'error');\n      throw error;\n    }\n  };\n\n  // Handle status updates\n  const handleStatusUpdate = async (spillId, newStatus) => {\n    try {\n      await apiService.updateSpillStatus(spillId, newStatus);\n      setActiveSpills(prev => prev.map(spill => spill.id === spillId ? {\n        ...spill,\n        status: newStatus,\n        updatedAt: new Date().toISOString()\n      } : spill));\n      showNotification(`Spill status updated to ${newStatus}`, 'success');\n    } catch (error) {\n      console.error('Error updating spill status:', error);\n      showNotification('Failed to update spill status', 'error');\n    }\n  };\n\n  // System status indicator\n  const getSystemStatusClass = () => {\n    switch (systemStatus) {\n      case 'online':\n        return 'status-online';\n      case 'loading':\n        return 'status-loading';\n      case 'error':\n        return 'status-error';\n      default:\n        return 'status-unknown';\n    }\n  };\n  const getSystemStatusText = () => {\n    switch (systemStatus) {\n      case 'online':\n        return 'System Online';\n      case 'loading':\n        return 'Updating...';\n      case 'error':\n        return 'Connection Issue';\n      default:\n        return 'Unknown Status';\n    }\n  };\n\n  // Loading screen\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Initializing Chemical Dispersion System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading monitoring systems and data sources...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [emergencyAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emergency-banner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emergency-icon\",\n            children: \"\\uD83D\\uDEA8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emergency-text\",\n            children: emergencyAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"banner-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-light\",\n              onClick: () => setSelectedSpill(activeSpills.find(s => s.priority === 'CRITICAL' || s.volume > 10000)),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"banner-close\",\n              onClick: () => setEmergencyAlert(null),\n              \"aria-label\": \"Close emergency alert\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-brand\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"app-title\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title-icon\",\n                children: \"\\uD83D\\uDCA7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), \"Water Dispersion Monitor\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"system-status\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `status-indicator ${getSystemStatusClass()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-text\",\n                children: getSystemStatusText()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"last-update\",\n                children: [\"Last updated: \", lastUpdate.toLocaleTimeString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n            className: \"main-nav\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/dashboard\",\n              icon: \"\\uD83C\\uDFE0\",\n              label: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/map\",\n              icon: \"\\uD83D\\uDDFA\\uFE0F\",\n              label: \"Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/weather\",\n              icon: \"\\uD83C\\uDF24\\uFE0F\",\n              label: \"Weather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/spill\",\n              icon: \"\\uD83D\\uDEA8\",\n              label: \"Report Incident\",\n              className: \"nav-btn-primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-value\",\n                  children: activeSpills.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-label\",\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-item critical\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-value\",\n                  children: activeSpills.filter(s => s.priority === 'CRITICAL' || s.volume > 10000).length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-label\",\n                  children: \"Critical\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-sm ${autoRefresh ? 'btn-primary' : 'btn-secondary'}`,\n                onClick: () => setAutoRefresh(!autoRefresh),\n                title: autoRefresh ? 'Disable auto-refresh' : 'Enable auto-refresh',\n                children: autoRefresh ? '🔄' : '⏸️'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-secondary\",\n                onClick: () => loadActiveSpills(true),\n                title: \"Refresh data\",\n                disabled: loading,\n                children: \"\\uD83D\\uDD03\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"app-main\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              spills: activeSpills,\n              onSpillSelect: handleSpillSelected,\n              onSpillUpdate: handleSpillUpdated,\n              onStatusUpdate: handleStatusUpdate,\n              onCreate: handleSpillCreated,\n              systemStatus: systemStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/spill\",\n            element: /*#__PURE__*/_jsxDEV(SpillForm, {\n              onSpillCreated: handleSpillCreated,\n              existingSpills: activeSpills\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/weather\",\n            element: /*#__PURE__*/_jsxDEV(WeatherPanel, {\n              selectedLocation: selectedSpill ? {\n                lat: selectedSpill.latitude,\n                lng: selectedSpill.longitude\n              } : null,\n              autoRefresh: autoRefresh\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/map\",\n            element: /*#__PURE__*/_jsxDEV(DispersionMap, {\n              spills: activeSpills,\n              selectedSpill: selectedSpill,\n              onSpillSelect: handleSpillSelected,\n              onSpillUpdate: handleSpillUpdated,\n              onStatusUpdate: handleStatusUpdate,\n              calculateDispersion: handleCalculateDispersion,\n              autoRefresh: autoRefresh\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settings\",\n            element: /*#__PURE__*/_jsxDEV(SettingsPage, {\n              autoRefresh: autoRefresh,\n              onAutoRefreshToggle: setAutoRefresh,\n              systemStatus: systemStatus,\n              lastUpdate: lastUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"app-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Water Dispersion Monitor v2.0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"separator\",\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Emergency Response System\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"System Uptime: 99.9%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"separator\",\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Data Sources: Weather.gov, NOAA, PubChem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom navigation link component\n_s(App, \"ywqPKs+JVBEKQTaaL5PZ53Ff0Ng=\");\n_c = App;\nfunction NavLink({\n  to,\n  icon,\n  label,\n  className = ''\n}) {\n  _s2();\n  const location = useLocation();\n  const isActive = location.pathname === to;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: `nav-btn ${className} ${isActive ? 'active' : ''}`,\n    to: to,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"nav-icon\",\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"nav-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n}\n\n// Simple settings page component\n_s2(NavLink, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = NavLink;\nfunction SettingsPage({\n  autoRefresh,\n  onAutoRefreshToggle,\n  systemStatus,\n  lastUpdate\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"System Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Configure system behavior and monitoring options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"setting-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: autoRefresh,\n            onChange: e => onAutoRefreshToggle(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Auto-refresh data every minute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"System Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: systemStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Update: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: lastUpdate.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data Sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"data-sources\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Weather Data: weather.gov API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Tidal Data: NOAA Tides & Currents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Chemical Data: PubChem Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SettingsPage;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"NavLink\");\n$RefreshReg$(_c3, \"SettingsPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Routes","Route","Navigate","Link","useLocation","Dashboard","SpillForm","WeatherPanel","DispersionMap","apiService","jsxDEV","_jsxDEV","App","_s","activeSpills","setActiveSpills","selectedSpill","setSelectedSpill","loading","setLoading","emergencyAlert","setEmergencyAlert","systemStatus","setSystemStatus","lastUpdate","setLastUpdate","autoRefresh","setAutoRefresh","loadActiveSpills","refreshInterval","setInterval","unsubscribe","subscribeToUpdates","updates","handleRealTimeUpdates","clearInterval","length","forEach","update","type","prev","data","showNotification","name","map","spill","id","spillId","status","newStatus","updatedAt","Date","toISOString","message","showLoadingState","spills","getAllSpills","activeSpillsList","filter","checkForEmergencyConditions","error","console","demoSpills","chemicalType","volume","latitude","longitude","spillTime","now","priority","source","reporterName","reporterContact","criticalSpills","toLowerCase","includes","chemicalData","hazardClass","alertMessage","log","toUpperCase","setTimeout","alert","handleSpillCreated","newSpill","exists","some","handleSpillSelected","handleSpillUpdated","updatedSpill","handleCalculateDispersion","simulationHours","result","calculateDispersion","dispersionData","lastCalculated","handleStatusUpdate","updateSpillStatus","getSystemStatusClass","getSystemStatusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","find","s","toLocaleTimeString","NavLink","to","icon","label","title","disabled","path","element","onSpillSelect","onSpillUpdate","onStatusUpdate","onCreate","onSpillCreated","existingSpills","selectedLocation","lat","lng","SettingsPage","onAutoRefreshToggle","replace","_c","_s2","location","isActive","pathname","_c2","checked","onChange","e","target","toLocaleString","_c3","$RefreshReg$"],"sources":["C:/water/chemical-dispersion-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport DispersionMap from './components/Map/DispersionMap';\nimport { apiService } from './services/api';\nimport './App.css';\n\nfunction App() {\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emergencyAlert, setEmergencyAlert] = useState(null);\n  const [systemStatus, setSystemStatus] = useState('online');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Load initial data and set up auto-refresh\n  useEffect(() => {\n    loadActiveSpills();\n    \n    // Set up auto-refresh interval\n    let refreshInterval;\n    if (autoRefresh) {\n      refreshInterval = setInterval(() => {\n        loadActiveSpills(false); // Silent refresh\n      }, 60000); // Refresh every minute\n    }\n\n    // Set up real-time updates subscription\n    const unsubscribe = apiService.subscribeToUpdates((updates) => {\n      handleRealTimeUpdates(updates);\n    });\n\n    return () => {\n      if (refreshInterval) clearInterval(refreshInterval);\n      if (unsubscribe) unsubscribe();\n    };\n  }, [autoRefresh]);\n\n  // Handle real-time updates\n  const handleRealTimeUpdates = useCallback((updates) => {\n    if (updates && updates.length > 0) {\n      updates.forEach(update => {\n        switch (update.type) {\n          case 'spill_created':\n            setActiveSpills(prev => [...prev, update.data]);\n            showNotification(`New spill reported: ${update.data.name}`, 'info');\n            break;\n          case 'spill_updated':\n            setActiveSpills(prev => \n              prev.map(spill => \n                spill.id === update.data.id ? { ...spill, ...update.data } : spill\n              )\n            );\n            break;\n          case 'spill_status_changed':\n            setActiveSpills(prev => \n              prev.map(spill => \n                spill.id === update.spillId \n                  ? { ...spill, status: update.newStatus, updatedAt: new Date().toISOString() }\n                  : spill\n              )\n            );\n            if (update.newStatus === 'CONTAINED') {\n              showNotification(`Spill ${update.spillId} marked as contained`, 'success');\n            }\n            break;\n          case 'emergency_alert':\n            setEmergencyAlert(update.message);\n            showNotification(update.message, 'error');\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }, []);\n\n  // Load active spills data\n  const loadActiveSpills = async (showLoadingState = true) => {\n    try {\n      if (showLoadingState) {\n        setLoading(true);\n      }\n      setSystemStatus('loading');\n      \n      const spills = await apiService.getAllSpills();\n      const activeSpillsList = spills.filter(spill => \n        spill.status === 'ACTIVE' || spill.status === 'CONTAINED'\n      );\n      \n      setActiveSpills(activeSpillsList);\n      setLastUpdate(new Date());\n      setSystemStatus('online');\n\n      // Check for emergency level spills\n      checkForEmergencyConditions(activeSpillsList);\n      \n    } catch (error) {\n      console.error('Error loading spills:', error);\n      setSystemStatus('error');\n      showNotification('Failed to load spill data. Using offline mode.', 'warning');\n      \n      // Try to use cached data or show empty state\n      if (activeSpills.length === 0) {\n        // Load demo data for development\n        const demoSpills = [\n          {\n            id: 'demo-1',\n            name: 'Demo Oil Spill',\n            chemicalType: 'Crude Oil',\n            volume: 5000,\n            latitude: 29.7604,\n            longitude: -95.3698,\n            spillTime: new Date(Date.now() - 3600000).toISOString(), // 1 hour ago\n            status: 'ACTIVE',\n            priority: 'HIGH',\n            source: 'Pipeline Leak',\n            reporterName: 'System Demo',\n            reporterContact: 'demo@system.com'\n          }\n        ];\n        setActiveSpills(demoSpills);\n      }\n    } finally {\n      if (showLoadingState) {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Check for emergency conditions\n  const checkForEmergencyConditions = (spills) => {\n    const criticalSpills = spills.filter(spill => \n      spill.volume > 10000 || \n      spill.chemicalType.toLowerCase().includes('toxic') ||\n      spill.priority === 'CRITICAL' ||\n      (spill.chemicalData && spill.chemicalData.hazardClass && \n       spill.chemicalData.hazardClass.toLowerCase().includes('hazard'))\n    );\n\n    if (criticalSpills.length > 0) {\n      const alertMessage = `${criticalSpills.length} critical incident(s) detected requiring immediate attention!`;\n      setEmergencyAlert(alertMessage);\n    } else {\n      setEmergencyAlert(null);\n    }\n  };\n\n  // Show notification (could be replaced with a proper notification system)\n  const showNotification = (message, type = 'info') => {\n    // Simple notification - could be enhanced with a proper notification library\n    console.log(`[${type.toUpperCase()}] ${message}`);\n    \n    // For now, show critical notifications as alerts\n    if (type === 'error') {\n      setTimeout(() => {\n        alert(message);\n      }, 100);\n    }\n  };\n\n  // Handle spill creation\n  const handleSpillCreated = useCallback((newSpill) => {\n    setActiveSpills(prev => {\n      // Avoid duplicates\n      const exists = prev.some(spill => spill.id === newSpill.id);\n      if (exists) {\n        return prev.map(spill => spill.id === newSpill.id ? newSpill : spill);\n      }\n      return [...prev, newSpill];\n    });\n    \n    setSelectedSpill(newSpill);\n    showNotification(`New spill reported: ${newSpill.name}`, 'success');\n    \n    // Check if this creates an emergency condition\n    checkForEmergencyConditions([...activeSpills, newSpill]);\n  }, [activeSpills]);\n\n  // Handle spill selection\n  const handleSpillSelected = useCallback((spill) => {\n    setSelectedSpill(spill);\n  }, []);\n\n  // Handle spill updates\n  const handleSpillUpdated = useCallback((updatedSpill) => {\n    setActiveSpills(prev => \n      prev.map(spill => \n        spill.id === updatedSpill.id ? updatedSpill : spill\n      )\n    );\n    \n    if (selectedSpill && selectedSpill.id === updatedSpill.id) {\n      setSelectedSpill(updatedSpill);\n    }\n    \n    showNotification(`Spill ${updatedSpill.name} updated`, 'info');\n  }, [selectedSpill]);\n\n  // Handle dispersion calculation\n  const handleCalculateDispersion = async (spillId, simulationHours = 24) => {\n    try {\n      const result = await apiService.calculateDispersion(spillId, simulationHours);\n      \n      // Update the spill with dispersion data\n      setActiveSpills(prev => \n        prev.map(spill => \n          spill.id === spillId \n            ? { ...spill, dispersionData: result.dispersionData, lastCalculated: new Date().toISOString() }\n            : spill\n        )\n      );\n      \n      showNotification('Dispersion calculation completed', 'success');\n      return result;\n    } catch (error) {\n      console.error('Error calculating dispersion:', error);\n      showNotification('Dispersion calculation failed', 'error');\n      throw error;\n    }\n  };\n\n  // Handle status updates\n  const handleStatusUpdate = async (spillId, newStatus) => {\n    try {\n      await apiService.updateSpillStatus(spillId, newStatus);\n      \n      setActiveSpills(prev => \n        prev.map(spill => \n          spill.id === spillId \n            ? { ...spill, status: newStatus, updatedAt: new Date().toISOString() }\n            : spill\n        )\n      );\n      \n      showNotification(`Spill status updated to ${newStatus}`, 'success');\n    } catch (error) {\n      console.error('Error updating spill status:', error);\n      showNotification('Failed to update spill status', 'error');\n    }\n  };\n\n  // System status indicator\n  const getSystemStatusClass = () => {\n    switch (systemStatus) {\n      case 'online': return 'status-online';\n      case 'loading': return 'status-loading';\n      case 'error': return 'status-error';\n      default: return 'status-unknown';\n    }\n  };\n\n  const getSystemStatusText = () => {\n    switch (systemStatus) {\n      case 'online': return 'System Online';\n      case 'loading': return 'Updating...';\n      case 'error': return 'Connection Issue';\n      default: return 'Unknown Status';\n    }\n  };\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div className=\"app-loading\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <h2>Initializing Chemical Dispersion System</h2>\n          <p>Loading monitoring systems and data sources...</p>\n          <div className=\"loading-progress\">\n            <div className=\"progress-bar\">\n              <div className=\"progress-fill\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* Emergency Alert Banner */}\n        {emergencyAlert && (\n          <div className=\"emergency-banner\">\n            <div className=\"banner-content\">\n              <span className=\"emergency-icon\">🚨</span>\n              <span className=\"emergency-text\">{emergencyAlert}</span>\n              <div className=\"banner-actions\">\n                <button \n                  className=\"btn btn-sm btn-light\"\n                  onClick={() => setSelectedSpill(activeSpills.find(s => s.priority === 'CRITICAL' || s.volume > 10000))}\n                >\n                  View Details\n                </button>\n                <button \n                  className=\"banner-close\" \n                  onClick={() => setEmergencyAlert(null)}\n                  aria-label=\"Close emergency alert\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Main Header */}\n        <header className=\"app-header\">\n          <div className=\"header-content\">\n            {/* Logo and Title */}\n            <div className=\"header-brand\">\n              <h1 className=\"app-title\">\n                <span className=\"title-icon\">💧</span>\n                Water Dispersion Monitor\n              </h1>\n              <div className=\"system-status\">\n                <div className={`status-indicator ${getSystemStatusClass()}`}></div>\n                <span className=\"status-text\">{getSystemStatusText()}</span>\n                {lastUpdate && (\n                  <span className=\"last-update\">\n                    Last updated: {lastUpdate.toLocaleTimeString()}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {/* Navigation */}\n            <nav className=\"main-nav\">\n              <NavLink to=\"/dashboard\" icon=\"🏠\" label=\"Dashboard\" />\n              <NavLink to=\"/map\" icon=\"🗺️\" label=\"Map\" />\n              <NavLink to=\"/weather\" icon=\"🌤️\" label=\"Weather\" />\n              <NavLink to=\"/spill\" icon=\"🚨\" label=\"Report Incident\" className=\"nav-btn-primary\" />\n            </nav>\n\n            {/* Status Indicators */}\n            <div className=\"header-status\">\n              <div className=\"status-grid\">\n                <div className=\"status-item\">\n                  <div className=\"status-value\">{activeSpills.length}</div>\n                  <div className=\"status-label\">Active</div>\n                </div>\n                <div className=\"status-item critical\">\n                  <div className=\"status-value\">\n                    {activeSpills.filter(s => s.priority === 'CRITICAL' || s.volume > 10000).length}\n                  </div>\n                  <div className=\"status-label\">Critical</div>\n                </div>\n              </div>\n              \n              <div className=\"header-controls\">\n                <button\n                  className={`btn btn-sm ${autoRefresh ? 'btn-primary' : 'btn-secondary'}`}\n                  onClick={() => setAutoRefresh(!autoRefresh)}\n                  title={autoRefresh ? 'Disable auto-refresh' : 'Enable auto-refresh'}\n                >\n                  {autoRefresh ? '🔄' : '⏸️'}\n                </button>\n                <button\n                  className=\"btn btn-sm btn-secondary\"\n                  onClick={() => loadActiveSpills(true)}\n                  title=\"Refresh data\"\n                  disabled={loading}\n                >\n                  🔃\n                </button>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Main Content */}\n        <main className=\"app-main\">\n          <Routes>\n            <Route \n              path=\"/dashboard\" \n              element={\n                <Dashboard \n                  spills={activeSpills} \n                  onSpillSelect={handleSpillSelected}\n                  onSpillUpdate={handleSpillUpdated}\n                  onStatusUpdate={handleStatusUpdate}\n                  onCreate={handleSpillCreated}\n                  systemStatus={systemStatus}\n                />\n              } \n            />\n            <Route \n              path=\"/spill\" \n              element={\n                <SpillForm \n                  onSpillCreated={handleSpillCreated}\n                  existingSpills={activeSpills}\n                />\n              } \n            />\n            <Route \n              path=\"/weather\" \n              element={\n                <WeatherPanel \n                  selectedLocation={selectedSpill ? {\n                    lat: selectedSpill.latitude, \n                    lng: selectedSpill.longitude\n                  } : null}\n                  autoRefresh={autoRefresh}\n                />\n              } \n            />\n            <Route \n              path=\"/map\" \n              element={\n                <DispersionMap \n                  spills={activeSpills}\n                  selectedSpill={selectedSpill}\n                  onSpillSelect={handleSpillSelected}\n                  onSpillUpdate={handleSpillUpdated}\n                  onStatusUpdate={handleStatusUpdate}\n                  calculateDispersion={handleCalculateDispersion}\n                  autoRefresh={autoRefresh}\n                />\n              } \n            />\n            <Route \n              path=\"/settings\" \n              element={\n                <SettingsPage \n                  autoRefresh={autoRefresh}\n                  onAutoRefreshToggle={setAutoRefresh}\n                  systemStatus={systemStatus}\n                  lastUpdate={lastUpdate}\n                />\n              } \n            />\n            <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n            <Route path=\"*\" element={<Navigate to=\"/dashboard\" replace />} />\n          </Routes>\n        </main>\n\n        {/* Footer */}\n        <footer className=\"app-footer\">\n          <div className=\"footer-content\">\n            <div className=\"footer-info\">\n              <span>Water Dispersion Monitor v2.0</span>\n              <span className=\"separator\">•</span>\n              <span>Emergency Response System</span>\n            </div>\n            <div className=\"footer-stats\">\n              <span>System Uptime: 99.9%</span>\n              <span className=\"separator\">•</span>\n              <span>Data Sources: Weather.gov, NOAA, PubChem</span>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\n// Custom navigation link component\nfunction NavLink({ to, icon, label, className = '' }) {\n  const location = useLocation();\n  const isActive = location.pathname === to;\n  \n  return (\n    <Link \n      className={`nav-btn ${className} ${isActive ? 'active' : ''}`} \n      to={to}\n    >\n      <span className=\"nav-icon\">{icon}</span>\n      <span className=\"nav-label\">{label}</span>\n    </Link>\n  );\n}\n\n// Simple settings page component\nfunction SettingsPage({ autoRefresh, onAutoRefreshToggle, systemStatus, lastUpdate }) {\n  return (\n    <div className=\"settings-page\">\n      <div className=\"settings-header\">\n        <h2>System Settings</h2>\n        <p>Configure system behavior and monitoring options</p>\n      </div>\n      \n      <div className=\"settings-content\">\n        <div className=\"settings-section\">\n          <h3>Data Refresh</h3>\n          <label className=\"setting-item\">\n            <input\n              type=\"checkbox\"\n              checked={autoRefresh}\n              onChange={(e) => onAutoRefreshToggle(e.target.checked)}\n            />\n            <span>Auto-refresh data every minute</span>\n          </label>\n        </div>\n        \n        <div className=\"settings-section\">\n          <h3>System Status</h3>\n          <div className=\"status-info\">\n            <p>Current Status: <strong>{systemStatus}</strong></p>\n            {lastUpdate && (\n              <p>Last Update: <strong>{lastUpdate.toLocaleString()}</strong></p>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"settings-section\">\n          <h3>Data Sources</h3>\n          <ul className=\"data-sources\">\n            <li>Weather Data: weather.gov API</li>\n            <li>Tidal Data: NOAA Tides & Currents</li>\n            <li>Chemical Data: PubChem Database</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}