{"ast":null,"code":"var _jsxFileName = \"C:\\\\water\\\\chemical-dispersion-app\\\\frontend\\\\src\\\\components\\\\Weather\\\\WeatherPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { apiService } from '../../services/api';\nimport './WeatherPanel.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WeatherPanel({\n  selectedLocation = null,\n  autoRefresh = true\n}) {\n  _s();\n  var _currentWeather$weath;\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [tidalData, setTidalData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [locationInput, setLocationInput] = useState({\n    latitude: '',\n    longitude: ''\n  });\n\n  // Initialize with default location or selected location\n  useEffect(() => {\n    if (selectedLocation) {\n      setCurrentLocation(selectedLocation);\n      loadWeatherData(selectedLocation.lat, selectedLocation.lng);\n    } else {\n      // Default location (Houston, TX)\n      const defaultLocation = {\n        lat: 29.7604,\n        lng: -95.3698\n      };\n      setCurrentLocation(defaultLocation);\n      loadWeatherData(defaultLocation.lat, defaultLocation.lng);\n    }\n  }, [selectedLocation]);\n\n  // Auto-refresh effect\n  useEffect(() => {\n    if (!autoRefresh || !currentLocation) return;\n    const refreshInterval = setInterval(() => {\n      loadWeatherData(currentLocation.lat, currentLocation.lng, false);\n    }, 300000); // Refresh every 5 minutes\n\n    return () => clearInterval(refreshInterval);\n  }, [autoRefresh, currentLocation]);\n  const loadWeatherData = async (lat, lng, showLoadingState = true) => {\n    if (!lat || !lng) return;\n    try {\n      if (showLoadingState) {\n        setLoading(true);\n      }\n      setError(null);\n      console.log(`Loading weather data for ${lat}, ${lng}`);\n\n      // Get weather data with better error handling\n      const [currentWeatherResult, forecastResult] = await Promise.allSettled([apiService.getCurrentWeather(lat, lng), apiService.getWeatherForecast(lat, lng, 72)]);\n\n      // Handle current weather\n      if (currentWeatherResult.status === 'fulfilled') {\n        setCurrentWeather(currentWeatherResult.value);\n      } else {\n        console.warn('Current weather failed:', currentWeatherResult.reason);\n        setCurrentWeather(createMockWeather());\n      }\n\n      // Handle forecast\n      if (forecastResult.status === 'fulfilled') {\n        const forecastData = forecastResult.value;\n        setForecast(Array.isArray(forecastData) ? forecastData : []);\n      } else {\n        console.warn('Forecast failed:', forecastResult.reason);\n        setForecast(createMockForecast());\n      }\n\n      // Get tidal data\n      try {\n        const tidalResult = await apiService.getTideForecast(lat, lng, 72);\n        setTidalData(Array.isArray(tidalResult) ? tidalResult : []);\n      } catch (tidalError) {\n        console.warn('Tidal data not available for this location:', tidalError);\n        setTidalData(createMockTidalData());\n      }\n      setLastUpdate(new Date());\n    } catch (error) {\n      console.error('Error loading weather data:', error);\n      setError('Failed to load weather data. Using mock data for demonstration.');\n\n      // Fallback to mock data\n      setCurrentWeather(createMockWeather());\n      setForecast(createMockForecast());\n      setTidalData(createMockTidalData());\n      setLastUpdate(new Date());\n    } finally {\n      if (showLoadingState) {\n        setLoading(false);\n      }\n    }\n  };\n  const createMockWeather = () => ({\n    temperature: Math.round(22.0 + (Math.random() - 0.5) * 10),\n    temperatureUnit: 'C',\n    windSpeed: `${Math.round(5.0 + Math.random() * 10)} m/s`,\n    windDirection: `${Math.round(Math.random() * 360)}°`,\n    humidity: Math.round(60.0 + Math.random() * 30),\n    pressure: Math.round(1013.25 + (Math.random() - 0.5) * 20),\n    visibility: Math.round(10.0 + Math.random() * 5),\n    weatherCondition: ['Partly Cloudy', 'Clear', 'Overcast', 'Light Rain'][Math.floor(Math.random() * 4)],\n    timestamp: new Date().toISOString()\n  });\n  const createMockForecast = () => {\n    const forecast = [];\n    for (let i = 0; i < 8; i++) {\n      const date = new Date();\n      date.setHours(date.getHours() + i * 3);\n      forecast.push({\n        timestamp: date.toISOString(),\n        temperature: Math.round(20 + Math.random() * 15),\n        temperatureUnit: 'C',\n        windSpeed: `${Math.round(3 + Math.random() * 12)} m/s`,\n        windDirection: `${Math.round(Math.random() * 360)}°`,\n        weatherCondition: ['Sunny', 'Partly Cloudy', 'Cloudy', 'Light Rain'][Math.floor(Math.random() * 4)]\n      });\n    }\n    return forecast;\n  };\n  const createMockTidalData = () => {\n    const tides = [];\n    for (let i = 0; i < 8; i++) {\n      const date = new Date();\n      date.setHours(date.getHours() + i * 3);\n      tides.push({\n        timestamp: date.toISOString(),\n        tideHeight: Math.round((1.0 + Math.random() * 2) * 10) / 10,\n        stationName: 'Mock Station',\n        stationId: 'MOCK001'\n      });\n    }\n    return tides;\n  };\n  const handleLocationInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLocationInput(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleLocationSubmit = e => {\n    e.preventDefault();\n    const lat = parseFloat(locationInput.latitude);\n    const lng = parseFloat(locationInput.longitude);\n    if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n      setError('Please enter valid latitude (-90 to 90) and longitude (-180 to 180) coordinates.');\n      return;\n    }\n    const newLocation = {\n      lat,\n      lng\n    };\n    setCurrentLocation(newLocation);\n    loadWeatherData(lat, lng);\n\n    // Clear the input after successful submission\n    setLocationInput({\n      latitude: '',\n      longitude: ''\n    });\n  };\n  const formatTime = dateString => {\n    try {\n      return new Date(dateString).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch (e) {\n      return 'Invalid time';\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric'\n      });\n    } catch (e) {\n      return 'Invalid date';\n    }\n  };\n  const getWeatherIcon = condition => {\n    if (!condition) return '☀️';\n    const cond = condition.toLowerCase();\n    if (cond.includes('rain')) return '🌧️';\n    if (cond.includes('cloud')) return '☁️';\n    if (cond.includes('clear') || cond.includes('sunny')) return '☀️';\n    if (cond.includes('snow')) return '❄️';\n    if (cond.includes('storm')) return '⛈️';\n    return '🌤️';\n  };\n  const getTemperatureClass = temp => {\n    if (temp >= 30) return 'hot';\n    if (temp >= 25) return 'warm';\n    if (temp >= 15) return 'mild';\n    if (temp >= 5) return 'cool';\n    return 'cold';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-panel-container\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading Weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fetching current conditions and forecasts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }, this), !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83C\\uDF24\\uFE0F Weather & Environmental Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Current weather conditions and forecasts for chemical dispersion modeling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"last-update\",\n            children: [\"Last updated: \", lastUpdate.toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: autoRefresh,\n              onChange: () => {} // This would be controlled by parent component\n              ,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), \"Auto-refresh (controlled by system)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary btn-sm\",\n            onClick: () => currentLocation && loadWeatherData(currentLocation.lat, currentLocation.lng),\n            disabled: loading || !currentLocation,\n            children: \"\\uD83D\\uDD04 Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-banner\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-secondary\",\n          onClick: () => setError(null),\n          style: {\n            marginLeft: 'auto'\n          },\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83D\\uDCCD Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Set coordinates for weather data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLocationSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coordinate-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Latitude\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"latitude\",\n                  className: \"coordinate-input\",\n                  placeholder: \"29.7604\",\n                  value: locationInput.latitude,\n                  onChange: handleLocationInputChange,\n                  step: \"0.0001\",\n                  min: \"-90\",\n                  max: \"90\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Longitude\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"longitude\",\n                  className: \"coordinate-input\",\n                  placeholder: \"-95.3698\",\n                  value: locationInput.longitude,\n                  onChange: handleLocationInputChange,\n                  step: \"0.0001\",\n                  min: \"-180\",\n                  max: \"180\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                disabled: loading,\n                children: \"Get Weather\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this), currentLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '1rem',\n              padding: '1rem',\n              backgroundColor: '#f8fafc',\n              borderRadius: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Current Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 40\n              }, this), \" \", currentLocation.lat.toFixed(4), \", \", currentLocation.lng.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-weather-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Current Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Real-time weather data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `weather-card ${getTemperatureClass(currentWeather.temperature)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-main\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-icon\",\n                children: getWeatherIcon(currentWeather.weatherCondition)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-temp\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"temp-value\",\n                  children: currentWeather.temperature\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"temp-unit\",\n                  children: [\"\\xB0\", currentWeather.temperatureUnit || 'C']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-condition\",\n                children: currentWeather.weatherCondition || 'Clear'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-icon\",\n                  children: \"\\uD83D\\uDCA8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Wind\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: [currentWeather.windSpeed, \" \", currentWeather.windDirection]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 41\n              }, this), currentWeather.humidity && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-icon\",\n                  children: \"\\uD83D\\uDCA7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Humidity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: [currentWeather.humidity, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 45\n              }, this), currentWeather.pressure && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-icon\",\n                  children: \"\\uD83C\\uDF21\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Pressure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: [currentWeather.pressure, \" mb\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }, this), tidalData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tidal-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83C\\uDF0A Tidal Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Current tidal conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tidal-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tidal-current\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tidal-icon\",\n                children: \"\\uD83C\\uDF0A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tidal-level\",\n                  children: [tidalData[0].tideHeight, \" ft\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tidal-time\",\n                  children: formatTime(tidalData[0].timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tidal-trend\",\n              children: tidalData[0].stationName || tidalData[0].stationId || 'Local Station'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this), forecast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Weather Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Extended forecast for the next 24 hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-grid\",\n          children: forecast.slice(0, 8).map((period, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-time\",\n              children: formatTime(period.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-icon\",\n              children: getWeatherIcon(period.weatherCondition)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-temp\",\n              children: [period.temperature, \"\\xB0\", period.temperatureUnit || 'C']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-wind\",\n              children: [period.windSpeed, \" \", period.windDirection]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"environmental-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCCA Environmental Factors for Dispersion Modeling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Key factors affecting chemical dispersion in water and air\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"impact-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"impact-icon\",\n                children: \"\\uD83D\\uDCA8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Wind Effects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Wind speed and direction significantly affect the spread and direction of chemical plumes in water and air.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 37\n              }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"impact-assessment\",\n                children: [\"Current conditions: \", currentWeather.windSpeed, \" from \", currentWeather.windDirection, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 45\n                }, this), \"Impact: \", parseInt(currentWeather.windSpeed) > 15 ? 'High dispersion rate' : 'Moderate dispersion rate']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"impact-icon\",\n                children: \"\\uD83C\\uDF21\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Temperature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Temperature affects chemical volatility, reaction rates, and biological processes.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 37\n              }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"impact-assessment\",\n                children: [\"Current: \", currentWeather.temperature, \"\\xB0\", currentWeather.temperatureUnit, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 45\n                }, this), \"Effect: \", currentWeather.temperature > 25 ? 'Increased volatility' : 'Reduced volatility']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"impact-icon\",\n                children: \"\\uD83C\\uDF0A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Tidal Movement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Tidal currents influence the transport and mixing of chemicals in coastal and estuarine waters.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 37\n              }, this), tidalData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"impact-assessment\",\n                children: [\"Current tide: \", tidalData[0].tideHeight, \" ft\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 45\n                }, this), \"Transport effect: \", tidalData[0].tideHeight > 2 ? 'High' : 'Moderate']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"impact-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"impact-icon\",\n                children: \"\\u2601\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Atmospheric Stability\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Weather conditions affect how chemicals disperse in the atmosphere and water column.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 37\n              }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"impact-assessment\",\n                children: [\"Conditions: \", currentWeather.weatherCondition, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 45\n                }, this), \"Stability: \", (_currentWeather$weath = currentWeather.weatherCondition) !== null && _currentWeather$weath !== void 0 && _currentWeather$weath.toLowerCase().includes('clear') ? 'Stable' : 'Variable']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherPanel, \"oaKkWWA2YSLWQm1pUAT8Ahp7gRM=\");\n_c = WeatherPanel;\nexport default WeatherPanel;\nvar _c;\n$RefreshReg$(_c, \"WeatherPanel\");","map":{"version":3,"names":["React","useState","useEffect","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherPanel","selectedLocation","autoRefresh","_s","_currentWeather$weath","currentLocation","setCurrentLocation","currentWeather","setCurrentWeather","forecast","setForecast","tidalData","setTidalData","loading","setLoading","error","setError","lastUpdate","setLastUpdate","locationInput","setLocationInput","latitude","longitude","loadWeatherData","lat","lng","defaultLocation","refreshInterval","setInterval","clearInterval","showLoadingState","console","log","currentWeatherResult","forecastResult","Promise","allSettled","getCurrentWeather","getWeatherForecast","status","value","warn","reason","createMockWeather","forecastData","Array","isArray","createMockForecast","tidalResult","getTideForecast","tidalError","createMockTidalData","Date","temperature","Math","round","random","temperatureUnit","windSpeed","windDirection","humidity","pressure","visibility","weatherCondition","floor","timestamp","toISOString","i","date","setHours","getHours","push","tides","tideHeight","stationName","stationId","handleLocationInputChange","e","name","target","prev","handleLocationSubmit","preventDefault","parseFloat","isNaN","newLocation","formatTime","dateString","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","weekday","month","day","getWeatherIcon","condition","cond","toLowerCase","includes","getTemperatureClass","temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","disabled","onClick","style","marginLeft","onSubmit","placeholder","step","min","max","marginTop","padding","backgroundColor","borderRadius","toFixed","length","slice","map","period","index","parseInt","_c","$RefreshReg$"],"sources":["C:/water/chemical-dispersion-app/frontend/src/components/Weather/WeatherPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { apiService } from '../../services/api';\nimport './WeatherPanel.css';\n\nfunction WeatherPanel({ selectedLocation = null, autoRefresh = true }) {\n    const [currentLocation, setCurrentLocation] = useState(null);\n    const [currentWeather, setCurrentWeather] = useState(null);\n    const [forecast, setForecast] = useState([]);\n    const [tidalData, setTidalData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [lastUpdate, setLastUpdate] = useState(null);\n    const [locationInput, setLocationInput] = useState({\n        latitude: '',\n        longitude: ''\n    });\n\n    // Initialize with default location or selected location\n    useEffect(() => {\n        if (selectedLocation) {\n            setCurrentLocation(selectedLocation);\n            loadWeatherData(selectedLocation.lat, selectedLocation.lng);\n        } else {\n            // Default location (Houston, TX)\n            const defaultLocation = { lat: 29.7604, lng: -95.3698 };\n            setCurrentLocation(defaultLocation);\n            loadWeatherData(defaultLocation.lat, defaultLocation.lng);\n        }\n    }, [selectedLocation]);\n\n    // Auto-refresh effect\n    useEffect(() => {\n        if (!autoRefresh || !currentLocation) return;\n\n        const refreshInterval = setInterval(() => {\n            loadWeatherData(currentLocation.lat, currentLocation.lng, false);\n        }, 300000); // Refresh every 5 minutes\n\n        return () => clearInterval(refreshInterval);\n    }, [autoRefresh, currentLocation]);\n\n    const loadWeatherData = async (lat, lng, showLoadingState = true) => {\n        if (!lat || !lng) return;\n\n        try {\n            if (showLoadingState) {\n                setLoading(true);\n            }\n            setError(null);\n            \n            console.log(`Loading weather data for ${lat}, ${lng}`);\n            \n            // Get weather data with better error handling\n            const [currentWeatherResult, forecastResult] = await Promise.allSettled([\n                apiService.getCurrentWeather(lat, lng),\n                apiService.getWeatherForecast(lat, lng, 72)\n            ]);\n            \n            // Handle current weather\n            if (currentWeatherResult.status === 'fulfilled') {\n                setCurrentWeather(currentWeatherResult.value);\n            } else {\n                console.warn('Current weather failed:', currentWeatherResult.reason);\n                setCurrentWeather(createMockWeather());\n            }\n            \n            // Handle forecast\n            if (forecastResult.status === 'fulfilled') {\n                const forecastData = forecastResult.value;\n                setForecast(Array.isArray(forecastData) ? forecastData : []);\n            } else {\n                console.warn('Forecast failed:', forecastResult.reason);\n                setForecast(createMockForecast());\n            }\n            \n            // Get tidal data\n            try {\n                const tidalResult = await apiService.getTideForecast(lat, lng, 72);\n                setTidalData(Array.isArray(tidalResult) ? tidalResult : []);\n            } catch (tidalError) {\n                console.warn('Tidal data not available for this location:', tidalError);\n                setTidalData(createMockTidalData());\n            }\n            \n            setLastUpdate(new Date());\n            \n        } catch (error) {\n            console.error('Error loading weather data:', error);\n            setError('Failed to load weather data. Using mock data for demonstration.');\n            \n            // Fallback to mock data\n            setCurrentWeather(createMockWeather());\n            setForecast(createMockForecast());\n            setTidalData(createMockTidalData());\n            setLastUpdate(new Date());\n        } finally {\n            if (showLoadingState) {\n                setLoading(false);\n            }\n        }\n    };\n\n    const createMockWeather = () => ({\n        temperature: Math.round(22.0 + (Math.random() - 0.5) * 10),\n        temperatureUnit: 'C',\n        windSpeed: `${Math.round(5.0 + Math.random() * 10)} m/s`,\n        windDirection: `${Math.round(Math.random() * 360)}°`,\n        humidity: Math.round(60.0 + Math.random() * 30),\n        pressure: Math.round(1013.25 + (Math.random() - 0.5) * 20),\n        visibility: Math.round(10.0 + Math.random() * 5),\n        weatherCondition: ['Partly Cloudy', 'Clear', 'Overcast', 'Light Rain'][Math.floor(Math.random() * 4)],\n        timestamp: new Date().toISOString()\n    });\n\n    const createMockForecast = () => {\n        const forecast = [];\n        for (let i = 0; i < 8; i++) {\n            const date = new Date();\n            date.setHours(date.getHours() + i * 3);\n            forecast.push({\n                timestamp: date.toISOString(),\n                temperature: Math.round(20 + Math.random() * 15),\n                temperatureUnit: 'C',\n                windSpeed: `${Math.round(3 + Math.random() * 12)} m/s`,\n                windDirection: `${Math.round(Math.random() * 360)}°`,\n                weatherCondition: ['Sunny', 'Partly Cloudy', 'Cloudy', 'Light Rain'][Math.floor(Math.random() * 4)]\n            });\n        }\n        return forecast;\n    };\n\n    const createMockTidalData = () => {\n        const tides = [];\n        for (let i = 0; i < 8; i++) {\n            const date = new Date();\n            date.setHours(date.getHours() + i * 3);\n            tides.push({\n                timestamp: date.toISOString(),\n                tideHeight: Math.round((1.0 + Math.random() * 2) * 10) / 10,\n                stationName: 'Mock Station',\n                stationId: 'MOCK001'\n            });\n        }\n        return tides;\n    };\n\n    const handleLocationInputChange = (e) => {\n        const { name, value } = e.target;\n        setLocationInput(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const handleLocationSubmit = (e) => {\n        e.preventDefault();\n        const lat = parseFloat(locationInput.latitude);\n        const lng = parseFloat(locationInput.longitude);\n        \n        if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n            setError('Please enter valid latitude (-90 to 90) and longitude (-180 to 180) coordinates.');\n            return;\n        }\n        \n        const newLocation = { lat, lng };\n        setCurrentLocation(newLocation);\n        loadWeatherData(lat, lng);\n        \n        // Clear the input after successful submission\n        setLocationInput({ latitude: '', longitude: '' });\n    };\n\n    const formatTime = (dateString) => {\n        try {\n            return new Date(dateString).toLocaleTimeString('en-US', {\n                hour: '2-digit',\n                minute: '2-digit'\n            });\n        } catch (e) {\n            return 'Invalid time';\n        }\n    };\n\n    const formatDate = (dateString) => {\n        try {\n            return new Date(dateString).toLocaleDateString('en-US', {\n                weekday: 'short',\n                month: 'short',\n                day: 'numeric'\n            });\n        } catch (e) {\n            return 'Invalid date';\n        }\n    };\n\n    const getWeatherIcon = (condition) => {\n        if (!condition) return '☀️';\n        const cond = condition.toLowerCase();\n        if (cond.includes('rain')) return '🌧️';\n        if (cond.includes('cloud')) return '☁️';\n        if (cond.includes('clear') || cond.includes('sunny')) return '☀️';\n        if (cond.includes('snow')) return '❄️';\n        if (cond.includes('storm')) return '⛈️';\n        return '🌤️';\n    };\n\n    const getTemperatureClass = (temp) => {\n        if (temp >= 30) return 'hot';\n        if (temp >= 25) return 'warm';\n        if (temp >= 15) return 'mild';\n        if (temp >= 5) return 'cool';\n        return 'cold';\n    };\n\n    return (\n        <div className=\"weather-panel-container\">\n            {/* Loading State */}\n            {loading && (\n                <div className=\"loading-state\">\n                    <div className=\"loading-spinner\"></div>\n                    <h2>Loading Weather Data</h2>\n                    <p>Fetching current conditions and forecasts...</p>\n                </div>\n            )}\n\n            {!loading && (\n                <>\n                    {/* Header */}\n                    <div className=\"weather-header\">\n                        <div className=\"header-content\">\n                            <h1>🌤️ Weather & Environmental Data</h1>\n                            <p>Current weather conditions and forecasts for chemical dispersion modeling</p>\n                            {lastUpdate && (\n                                <p className=\"last-update\">\n                                    Last updated: {lastUpdate.toLocaleTimeString()}\n                                </p>\n                            )}\n                        </div>\n                        <div className=\"header-controls\">\n                            <label className=\"checkbox-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={autoRefresh}\n                                    onChange={() => {}} // This would be controlled by parent component\n                                    disabled\n                                />\n                                Auto-refresh (controlled by system)\n                            </label>\n                            <button\n                                className=\"btn btn-secondary btn-sm\"\n                                onClick={() => currentLocation && loadWeatherData(currentLocation.lat, currentLocation.lng)}\n                                disabled={loading || !currentLocation}\n                            >\n                                🔄 Refresh\n                            </button>\n                        </div>\n                    </div>\n\n                    {/* Error Banner */}\n                    {error && (\n                        <div className=\"error-banner\">\n                            <span className=\"error-icon\">⚠️</span>\n                            <span>{error}</span>\n                            <button \n                                className=\"btn btn-sm btn-secondary\"\n                                onClick={() => setError(null)}\n                                style={{ marginLeft: 'auto' }}\n                            >\n                                Dismiss\n                            </button>\n                        </div>\n                    )}\n\n                    {/* Main Content Grid */}\n                    <div className=\"weather-main-grid\">\n                        {/* Location Section */}\n                        <div className=\"location-section\">\n                            <div className=\"section-header\">\n                                <h2>📍 Location</h2>\n                                <p>Set coordinates for weather data</p>\n                            </div>\n                            \n                            <form onSubmit={handleLocationSubmit}>\n                                <div className=\"coordinate-inputs\">\n                                    <div className=\"input-group\">\n                                        <label>Latitude</label>\n                                        <input\n                                            type=\"number\"\n                                            name=\"latitude\"\n                                            className=\"coordinate-input\"\n                                            placeholder=\"29.7604\"\n                                            value={locationInput.latitude}\n                                            onChange={handleLocationInputChange}\n                                            step=\"0.0001\"\n                                            min=\"-90\"\n                                            max=\"90\"\n                                        />\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <label>Longitude</label>\n                                        <input\n                                            type=\"number\"\n                                            name=\"longitude\"\n                                            className=\"coordinate-input\"\n                                            placeholder=\"-95.3698\"\n                                            value={locationInput.longitude}\n                                            onChange={handleLocationInputChange}\n                                            step=\"0.0001\"\n                                            min=\"-180\"\n                                            max=\"180\"\n                                        />\n                                    </div>\n                                    <button \n                                        type=\"submit\" \n                                        className=\"btn btn-primary\" \n                                        disabled={loading}\n                                    >\n                                        Get Weather\n                                    </button>\n                                </div>\n                            </form>\n                            \n                            {currentLocation && (\n                                <div style={{ marginTop: '1rem', padding: '1rem', backgroundColor: '#f8fafc', borderRadius: '8px' }}>\n                                    <p><strong>Current Location:</strong> {currentLocation.lat.toFixed(4)}, {currentLocation.lng.toFixed(4)}</p>\n                                </div>\n                            )}\n                        </div>\n\n                        {/* Current Weather */}\n                        {currentWeather && (\n                            <div className=\"current-weather-section\">\n                                <div className=\"section-header\">\n                                    <h2>Current Conditions</h2>\n                                    <p>Real-time weather data</p>\n                                </div>\n                                \n                                <div className={`weather-card ${getTemperatureClass(currentWeather.temperature)}`}>\n                                    <div className=\"weather-main\">\n                                        <div className=\"weather-icon\">\n                                            {getWeatherIcon(currentWeather.weatherCondition)}\n                                        </div>\n                                        <div className=\"weather-temp\">\n                                            <span className=\"temp-value\">{currentWeather.temperature}</span>\n                                            <span className=\"temp-unit\">°{currentWeather.temperatureUnit || 'C'}</span>\n                                        </div>\n                                        <div className=\"weather-condition\">\n                                            {currentWeather.weatherCondition || 'Clear'}\n                                        </div>\n                                    </div>\n                                    \n                                    <div className=\"weather-details\">\n                                        <div className=\"detail-item\">\n                                            <span className=\"detail-icon\">💨</span>\n                                            <span className=\"detail-label\">Wind</span>\n                                            <span className=\"detail-value\">\n                                                {currentWeather.windSpeed} {currentWeather.windDirection}\n                                            </span>\n                                        </div>\n                                        {currentWeather.humidity && (\n                                            <div className=\"detail-item\">\n                                                <span className=\"detail-icon\">💧</span>\n                                                <span className=\"detail-label\">Humidity</span>\n                                                <span className=\"detail-value\">{currentWeather.humidity}%</span>\n                                            </div>\n                                        )}\n                                        {currentWeather.pressure && (\n                                            <div className=\"detail-item\">\n                                                <span className=\"detail-icon\">🌡️</span>\n                                                <span className=\"detail-label\">Pressure</span>\n                                                <span className=\"detail-value\">{currentWeather.pressure} mb</span>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n\n                        {/* Tidal Information */}\n                        {tidalData.length > 0 && (\n                            <div className=\"tidal-section\">\n                                <div className=\"section-header\">\n                                    <h2>🌊 Tidal Data</h2>\n                                    <p>Current tidal conditions</p>\n                                </div>\n                                \n                                <div className=\"tidal-card\">\n                                    <div className=\"tidal-current\">\n                                        <div className=\"tidal-icon\">🌊</div>\n                                        <div>\n                                            <div className=\"tidal-level\">\n                                                {tidalData[0].tideHeight} ft\n                                            </div>\n                                            <div className=\"tidal-time\">\n                                                {formatTime(tidalData[0].timestamp)}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"tidal-trend\">\n                                        {tidalData[0].stationName || tidalData[0].stationId || 'Local Station'}\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    {/* Forecast Section */}\n                    {forecast.length > 0 && (\n                        <div className=\"forecast-section\">\n                            <div className=\"section-header\">\n                                <h2>Weather Forecast</h2>\n                                <p>Extended forecast for the next 24 hours</p>\n                            </div>\n                            \n                            <div className=\"forecast-grid\">\n                                {forecast.slice(0, 8).map((period, index) => (\n                                    <div key={index} className=\"forecast-card\">\n                                        <div className=\"forecast-time\">\n                                            {formatTime(period.timestamp)}\n                                        </div>\n                                        <div className=\"forecast-icon\">\n                                            {getWeatherIcon(period.weatherCondition)}\n                                        </div>\n                                        <div className=\"forecast-temp\">\n                                            {period.temperature}°{period.temperatureUnit || 'C'}\n                                        </div>\n                                        <div className=\"forecast-wind\">\n                                            {period.windSpeed} {period.windDirection}\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n\n                    {/* Environmental Impact Section */}\n                    <div className=\"environmental-section\">\n                        <div className=\"section-header\">\n                            <h2>📊 Environmental Factors for Dispersion Modeling</h2>\n                            <p>Key factors affecting chemical dispersion in water and air</p>\n                        </div>\n                        \n                        <div className=\"impact-grid\">\n                            <div className=\"impact-card\">\n                                <div className=\"impact-header\">\n                                    <span className=\"impact-icon\">💨</span>\n                                    <h3>Wind Effects</h3>\n                                </div>\n                                <div className=\"impact-content\">\n                                    <p>Wind speed and direction significantly affect the spread and direction of chemical plumes in water and air.</p>\n                                    {currentWeather && (\n                                        <div className=\"impact-assessment\">\n                                            Current conditions: {currentWeather.windSpeed} from {currentWeather.windDirection}\n                                            <br />\n                                            Impact: {parseInt(currentWeather.windSpeed) > 15 ? 'High dispersion rate' : 'Moderate dispersion rate'}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                            \n                            <div className=\"impact-card\">\n                                <div className=\"impact-header\">\n                                    <span className=\"impact-icon\">🌡️</span>\n                                    <h3>Temperature</h3>\n                                </div>\n                                <div className=\"impact-content\">\n                                    <p>Temperature affects chemical volatility, reaction rates, and biological processes.</p>\n                                    {currentWeather && (\n                                        <div className=\"impact-assessment\">\n                                            Current: {currentWeather.temperature}°{currentWeather.temperatureUnit}\n                                            <br />\n                                            Effect: {currentWeather.temperature > 25 ? 'Increased volatility' : 'Reduced volatility'}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                            \n                            <div className=\"impact-card\">\n                                <div className=\"impact-header\">\n                                    <span className=\"impact-icon\">🌊</span>\n                                    <h3>Tidal Movement</h3>\n                                </div>\n                                <div className=\"impact-content\">\n                                    <p>Tidal currents influence the transport and mixing of chemicals in coastal and estuarine waters.</p>\n                                    {tidalData.length > 0 && (\n                                        <div className=\"impact-assessment\">\n                                            Current tide: {tidalData[0].tideHeight} ft\n                                            <br />\n                                            Transport effect: {tidalData[0].tideHeight > 2 ? 'High' : 'Moderate'}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                            \n                            <div className=\"impact-card\">\n                                <div className=\"impact-header\">\n                                    <span className=\"impact-icon\">☁️</span>\n                                    <h3>Atmospheric Stability</h3>\n                                </div>\n                                <div className=\"impact-content\">\n                                    <p>Weather conditions affect how chemicals disperse in the atmosphere and water column.</p>\n                                    {currentWeather && (\n                                        <div className=\"impact-assessment\">\n                                            Conditions: {currentWeather.weatherCondition}\n                                            <br />\n                                            Stability: {currentWeather.weatherCondition?.toLowerCase().includes('clear') ? 'Stable' : 'Variable'}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default WeatherPanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,YAAYA,CAAC;EAAEC,gBAAgB,GAAG,IAAI;EAAEC,WAAW,GAAG;AAAK,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACnE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC;IAC/C4B,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACf,CAAC,CAAC;;EAEF;EACA5B,SAAS,CAAC,MAAM;IACZ,IAAIO,gBAAgB,EAAE;MAClBK,kBAAkB,CAACL,gBAAgB,CAAC;MACpCsB,eAAe,CAACtB,gBAAgB,CAACuB,GAAG,EAAEvB,gBAAgB,CAACwB,GAAG,CAAC;IAC/D,CAAC,MAAM;MACH;MACA,MAAMC,eAAe,GAAG;QAAEF,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;MAAQ,CAAC;MACvDnB,kBAAkB,CAACoB,eAAe,CAAC;MACnCH,eAAe,CAACG,eAAe,CAACF,GAAG,EAAEE,eAAe,CAACD,GAAG,CAAC;IAC7D;EACJ,CAAC,EAAE,CAACxB,gBAAgB,CAAC,CAAC;;EAEtB;EACAP,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,WAAW,IAAI,CAACG,eAAe,EAAE;IAEtC,MAAMsB,eAAe,GAAGC,WAAW,CAAC,MAAM;MACtCL,eAAe,CAAClB,eAAe,CAACmB,GAAG,EAAEnB,eAAe,CAACoB,GAAG,EAAE,KAAK,CAAC;IACpE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;;IAEZ,OAAO,MAAMI,aAAa,CAACF,eAAe,CAAC;EAC/C,CAAC,EAAE,CAACzB,WAAW,EAAEG,eAAe,CAAC,CAAC;EAElC,MAAMkB,eAAe,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEK,gBAAgB,GAAG,IAAI,KAAK;IACjE,IAAI,CAACN,GAAG,IAAI,CAACC,GAAG,EAAE;IAElB,IAAI;MACA,IAAIK,gBAAgB,EAAE;QAClBhB,UAAU,CAAC,IAAI,CAAC;MACpB;MACAE,QAAQ,CAAC,IAAI,CAAC;MAEde,OAAO,CAACC,GAAG,CAAC,4BAA4BR,GAAG,KAAKC,GAAG,EAAE,CAAC;;MAEtD;MACA,MAAM,CAACQ,oBAAoB,EAAEC,cAAc,CAAC,GAAG,MAAMC,OAAO,CAACC,UAAU,CAAC,CACpEzC,UAAU,CAAC0C,iBAAiB,CAACb,GAAG,EAAEC,GAAG,CAAC,EACtC9B,UAAU,CAAC2C,kBAAkB,CAACd,GAAG,EAAEC,GAAG,EAAE,EAAE,CAAC,CAC9C,CAAC;;MAEF;MACA,IAAIQ,oBAAoB,CAACM,MAAM,KAAK,WAAW,EAAE;QAC7C/B,iBAAiB,CAACyB,oBAAoB,CAACO,KAAK,CAAC;MACjD,CAAC,MAAM;QACHT,OAAO,CAACU,IAAI,CAAC,yBAAyB,EAAER,oBAAoB,CAACS,MAAM,CAAC;QACpElC,iBAAiB,CAACmC,iBAAiB,CAAC,CAAC,CAAC;MAC1C;;MAEA;MACA,IAAIT,cAAc,CAACK,MAAM,KAAK,WAAW,EAAE;QACvC,MAAMK,YAAY,GAAGV,cAAc,CAACM,KAAK;QACzC9B,WAAW,CAACmC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,GAAGA,YAAY,GAAG,EAAE,CAAC;MAChE,CAAC,MAAM;QACHb,OAAO,CAACU,IAAI,CAAC,kBAAkB,EAAEP,cAAc,CAACQ,MAAM,CAAC;QACvDhC,WAAW,CAACqC,kBAAkB,CAAC,CAAC,CAAC;MACrC;;MAEA;MACA,IAAI;QACA,MAAMC,WAAW,GAAG,MAAMrD,UAAU,CAACsD,eAAe,CAACzB,GAAG,EAAEC,GAAG,EAAE,EAAE,CAAC;QAClEb,YAAY,CAACiC,KAAK,CAACC,OAAO,CAACE,WAAW,CAAC,GAAGA,WAAW,GAAG,EAAE,CAAC;MAC/D,CAAC,CAAC,OAAOE,UAAU,EAAE;QACjBnB,OAAO,CAACU,IAAI,CAAC,6CAA6C,EAAES,UAAU,CAAC;QACvEtC,YAAY,CAACuC,mBAAmB,CAAC,CAAC,CAAC;MACvC;MAEAjC,aAAa,CAAC,IAAIkC,IAAI,CAAC,CAAC,CAAC;IAE7B,CAAC,CAAC,OAAOrC,KAAK,EAAE;MACZgB,OAAO,CAAChB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,iEAAiE,CAAC;;MAE3E;MACAR,iBAAiB,CAACmC,iBAAiB,CAAC,CAAC,CAAC;MACtCjC,WAAW,CAACqC,kBAAkB,CAAC,CAAC,CAAC;MACjCnC,YAAY,CAACuC,mBAAmB,CAAC,CAAC,CAAC;MACnCjC,aAAa,CAAC,IAAIkC,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,SAAS;MACN,IAAItB,gBAAgB,EAAE;QAClBhB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;EACJ,CAAC;EAED,MAAM6B,iBAAiB,GAAGA,CAAA,MAAO;IAC7BU,WAAW,EAAEC,IAAI,CAACC,KAAK,CAAC,IAAI,GAAG,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;IAC1DC,eAAe,EAAE,GAAG;IACpBC,SAAS,EAAE,GAAGJ,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM;IACxDG,aAAa,EAAE,GAAGL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG;IACpDI,QAAQ,EAAEN,IAAI,CAACC,KAAK,CAAC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC/CK,QAAQ,EAAEP,IAAI,CAACC,KAAK,CAAC,OAAO,GAAG,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;IAC1DM,UAAU,EAAER,IAAI,CAACC,KAAK,CAAC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IAChDO,gBAAgB,EAAE,CAAC,eAAe,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,CAAC,CAACT,IAAI,CAACU,KAAK,CAACV,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrGS,SAAS,EAAE,IAAIb,IAAI,CAAC,CAAC,CAACc,WAAW,CAAC;EACtC,CAAC,CAAC;EAEF,MAAMnB,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,MAAMtC,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAI0D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxB,MAAMC,IAAI,GAAG,IAAIhB,IAAI,CAAC,CAAC;MACvBgB,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,CAAC;MACtC1D,QAAQ,CAAC8D,IAAI,CAAC;QACVN,SAAS,EAAEG,IAAI,CAACF,WAAW,CAAC,CAAC;QAC7Bb,WAAW,EAAEC,IAAI,CAACC,KAAK,CAAC,EAAE,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;QAChDC,eAAe,EAAE,GAAG;QACpBC,SAAS,EAAE,GAAGJ,IAAI,CAACC,KAAK,CAAC,CAAC,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM;QACtDG,aAAa,EAAE,GAAGL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG;QACpDO,gBAAgB,EAAE,CAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,YAAY,CAAC,CAACT,IAAI,CAACU,KAAK,CAACV,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MACtG,CAAC,CAAC;IACN;IACA,OAAO/C,QAAQ;EACnB,CAAC;EAED,MAAM0C,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,MAAMqB,KAAK,GAAG,EAAE;IAChB,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxB,MAAMC,IAAI,GAAG,IAAIhB,IAAI,CAAC,CAAC;MACvBgB,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,CAAC;MACtCK,KAAK,CAACD,IAAI,CAAC;QACPN,SAAS,EAAEG,IAAI,CAACF,WAAW,CAAC,CAAC;QAC7BO,UAAU,EAAEnB,IAAI,CAACC,KAAK,CAAC,CAAC,GAAG,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE;QAC3DkB,WAAW,EAAE,cAAc;QAC3BC,SAAS,EAAE;MACf,CAAC,CAAC;IACN;IACA,OAAOH,KAAK;EAChB,CAAC;EAED,MAAMI,yBAAyB,GAAIC,CAAC,IAAK;IACrC,MAAM;MAAEC,IAAI;MAAEtC;IAAM,CAAC,GAAGqC,CAAC,CAACE,MAAM;IAChC3D,gBAAgB,CAAC4D,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAACF,IAAI,GAAGtC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMyC,oBAAoB,GAAIJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAM1D,GAAG,GAAG2D,UAAU,CAAChE,aAAa,CAACE,QAAQ,CAAC;IAC9C,MAAMI,GAAG,GAAG0D,UAAU,CAAChE,aAAa,CAACG,SAAS,CAAC;IAE/C,IAAI8D,KAAK,CAAC5D,GAAG,CAAC,IAAI4D,KAAK,CAAC3D,GAAG,CAAC,IAAID,GAAG,GAAG,CAAC,EAAE,IAAIA,GAAG,GAAG,EAAE,IAAIC,GAAG,GAAG,CAAC,GAAG,IAAIA,GAAG,GAAG,GAAG,EAAE;MAC9ET,QAAQ,CAAC,kFAAkF,CAAC;MAC5F;IACJ;IAEA,MAAMqE,WAAW,GAAG;MAAE7D,GAAG;MAAEC;IAAI,CAAC;IAChCnB,kBAAkB,CAAC+E,WAAW,CAAC;IAC/B9D,eAAe,CAACC,GAAG,EAAEC,GAAG,CAAC;;IAEzB;IACAL,gBAAgB,CAAC;MAAEC,QAAQ,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAC,CAAC;EACrD,CAAC;EAED,MAAMgE,UAAU,GAAIC,UAAU,IAAK;IAC/B,IAAI;MACA,OAAO,IAAInC,IAAI,CAACmC,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;QACpDC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACZ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOb,CAAC,EAAE;MACR,OAAO,cAAc;IACzB;EACJ,CAAC;EAED,MAAMc,UAAU,GAAIJ,UAAU,IAAK;IAC/B,IAAI;MACA,OAAO,IAAInC,IAAI,CAACmC,UAAU,CAAC,CAACK,kBAAkB,CAAC,OAAO,EAAE;QACpDC,OAAO,EAAE,OAAO;QAChBC,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE;MACT,CAAC,CAAC;IACN,CAAC,CAAC,OAAOlB,CAAC,EAAE;MACR,OAAO,cAAc;IACzB;EACJ,CAAC;EAED,MAAMmB,cAAc,GAAIC,SAAS,IAAK;IAClC,IAAI,CAACA,SAAS,EAAE,OAAO,IAAI;IAC3B,MAAMC,IAAI,GAAGD,SAAS,CAACE,WAAW,CAAC,CAAC;IACpC,IAAID,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,KAAK;IACvC,IAAIF,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,IAAI;IACvC,IAAIF,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,IAAI;IACjE,IAAIF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,IAAI;IACtC,IAAIF,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,IAAI;IACvC,OAAO,KAAK;EAChB,CAAC;EAED,MAAMC,mBAAmB,GAAIC,IAAI,IAAK;IAClC,IAAIA,IAAI,IAAI,EAAE,EAAE,OAAO,KAAK;IAC5B,IAAIA,IAAI,IAAI,EAAE,EAAE,OAAO,MAAM;IAC7B,IAAIA,IAAI,IAAI,EAAE,EAAE,OAAO,MAAM;IAC7B,IAAIA,IAAI,IAAI,CAAC,EAAE,OAAO,MAAM;IAC5B,OAAO,MAAM;EACjB,CAAC;EAED,oBACIzG,OAAA;IAAK0G,SAAS,EAAC,yBAAyB;IAAAC,QAAA,GAEnC3F,OAAO,iBACJhB,OAAA;MAAK0G,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1B3G,OAAA;QAAK0G,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvC/G,OAAA;QAAA2G,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B/G,OAAA;QAAA2G,QAAA,EAAG;MAA4C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACR,EAEA,CAAC/F,OAAO,iBACLhB,OAAA,CAAAE,SAAA;MAAAyG,QAAA,gBAEI3G,OAAA;QAAK0G,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3B3G,OAAA;UAAK0G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3B3G,OAAA;YAAA2G,QAAA,EAAI;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzC/G,OAAA;YAAA2G,QAAA,EAAG;UAAyE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAC/E3F,UAAU,iBACPpB,OAAA;YAAG0G,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,gBACT,EAACvF,UAAU,CAACuE,kBAAkB,CAAC,CAAC;UAAA;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACN/G,OAAA;UAAK0G,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5B3G,OAAA;YAAO0G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B3G,OAAA;cACIgH,IAAI,EAAC,UAAU;cACfC,OAAO,EAAE5G,WAAY;cACrB6G,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;cAAA;cACpBC,QAAQ;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,uCAEN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR/G,OAAA;YACI0G,SAAS,EAAC,0BAA0B;YACpCU,OAAO,EAAEA,CAAA,KAAM5G,eAAe,IAAIkB,eAAe,CAAClB,eAAe,CAACmB,GAAG,EAAEnB,eAAe,CAACoB,GAAG,CAAE;YAC5FuF,QAAQ,EAAEnG,OAAO,IAAI,CAACR,eAAgB;YAAAmG,QAAA,EACzC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAGL7F,KAAK,iBACFlB,OAAA;QAAK0G,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzB3G,OAAA;UAAM0G,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtC/G,OAAA;UAAA2G,QAAA,EAAOzF;QAAK;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpB/G,OAAA;UACI0G,SAAS,EAAC,0BAA0B;UACpCU,OAAO,EAAEA,CAAA,KAAMjG,QAAQ,CAAC,IAAI,CAAE;UAC9BkG,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAAX,QAAA,EACjC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR,eAGD/G,OAAA;QAAK0G,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAE9B3G,OAAA;UAAK0G,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7B3G,OAAA;YAAK0G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3B3G,OAAA;cAAA2G,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpB/G,OAAA;cAAA2G,QAAA,EAAG;YAAgC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eAEN/G,OAAA;YAAMuH,QAAQ,EAAEnC,oBAAqB;YAAAuB,QAAA,eACjC3G,OAAA;cAAK0G,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC9B3G,OAAA;gBAAK0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBACxB3G,OAAA;kBAAA2G,QAAA,EAAO;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACvB/G,OAAA;kBACIgH,IAAI,EAAC,QAAQ;kBACb/B,IAAI,EAAC,UAAU;kBACfyB,SAAS,EAAC,kBAAkB;kBAC5Bc,WAAW,EAAC,SAAS;kBACrB7E,KAAK,EAAErB,aAAa,CAACE,QAAS;kBAC9B0F,QAAQ,EAAEnC,yBAA0B;kBACpC0C,IAAI,EAAC,QAAQ;kBACbC,GAAG,EAAC,KAAK;kBACTC,GAAG,EAAC;gBAAI;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACN/G,OAAA;gBAAK0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBACxB3G,OAAA;kBAAA2G,QAAA,EAAO;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACxB/G,OAAA;kBACIgH,IAAI,EAAC,QAAQ;kBACb/B,IAAI,EAAC,WAAW;kBAChByB,SAAS,EAAC,kBAAkB;kBAC5Bc,WAAW,EAAC,UAAU;kBACtB7E,KAAK,EAAErB,aAAa,CAACG,SAAU;kBAC/ByF,QAAQ,EAAEnC,yBAA0B;kBACpC0C,IAAI,EAAC,QAAQ;kBACbC,GAAG,EAAC,MAAM;kBACVC,GAAG,EAAC;gBAAK;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACN/G,OAAA;gBACIgH,IAAI,EAAC,QAAQ;gBACbN,SAAS,EAAC,iBAAiB;gBAC3BS,QAAQ,EAAEnG,OAAQ;gBAAA2F,QAAA,EACrB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,EAENvG,eAAe,iBACZR,OAAA;YAAKqH,KAAK,EAAE;cAAEO,SAAS,EAAE,MAAM;cAAEC,OAAO,EAAE,MAAM;cAAEC,eAAe,EAAE,SAAS;cAAEC,YAAY,EAAE;YAAM,CAAE;YAAApB,QAAA,eAChG3G,OAAA;cAAA2G,QAAA,gBAAG3G,OAAA;gBAAA2G,QAAA,EAAQ;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACvG,eAAe,CAACmB,GAAG,CAACqG,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACxH,eAAe,CAACoB,GAAG,CAACoG,OAAO,CAAC,CAAC,CAAC;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3G,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EAGLrG,cAAc,iBACXV,OAAA;UAAK0G,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACpC3G,OAAA;YAAK0G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3B3G,OAAA;cAAA2G,QAAA,EAAI;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3B/G,OAAA;cAAA2G,QAAA,EAAG;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eAEN/G,OAAA;YAAK0G,SAAS,EAAE,gBAAgBF,mBAAmB,CAAC9F,cAAc,CAAC8C,WAAW,CAAC,EAAG;YAAAmD,QAAA,gBAC9E3G,OAAA;cAAK0G,SAAS,EAAC,cAAc;cAAAC,QAAA,gBACzB3G,OAAA;gBAAK0G,SAAS,EAAC,cAAc;gBAAAC,QAAA,EACxBR,cAAc,CAACzF,cAAc,CAACwD,gBAAgB;cAAC;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC,eACN/G,OAAA;gBAAK0G,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBACzB3G,OAAA;kBAAM0G,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAEjG,cAAc,CAAC8C;gBAAW;kBAAAoD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAChE/G,OAAA;kBAAM0G,SAAS,EAAC,WAAW;kBAAAC,QAAA,GAAC,MAAC,EAACjG,cAAc,CAACkD,eAAe,IAAI,GAAG;gBAAA;kBAAAgD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1E,CAAC,eACN/G,OAAA;gBAAK0G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAC7BjG,cAAc,CAACwD,gBAAgB,IAAI;cAAO;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAEN/G,OAAA;cAAK0G,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC5B3G,OAAA;gBAAK0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBACxB3G,OAAA;kBAAM0G,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvC/G,OAAA;kBAAM0G,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC1C/G,OAAA;kBAAM0G,SAAS,EAAC,cAAc;kBAAAC,QAAA,GACzBjG,cAAc,CAACmD,SAAS,EAAC,GAAC,EAACnD,cAAc,CAACoD,aAAa;gBAAA;kBAAA8C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,EACLrG,cAAc,CAACqD,QAAQ,iBACpB/D,OAAA;gBAAK0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBACxB3G,OAAA;kBAAM0G,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvC/G,OAAA;kBAAM0G,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC9C/G,OAAA;kBAAM0G,SAAS,EAAC,cAAc;kBAAAC,QAAA,GAAEjG,cAAc,CAACqD,QAAQ,EAAC,GAAC;gBAAA;kBAAA6C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D,CACR,EACArG,cAAc,CAACsD,QAAQ,iBACpBhE,OAAA;gBAAK0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBACxB3G,OAAA;kBAAM0G,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAG;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACxC/G,OAAA;kBAAM0G,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC9C/G,OAAA;kBAAM0G,SAAS,EAAC,cAAc;kBAAAC,QAAA,GAAEjG,cAAc,CAACsD,QAAQ,EAAC,KAAG;gBAAA;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjE,CACR;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR,EAGAjG,SAAS,CAACmH,MAAM,GAAG,CAAC,iBACjBjI,OAAA;UAAK0G,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1B3G,OAAA;YAAK0G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3B3G,OAAA;cAAA2G,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtB/G,OAAA;cAAA2G,QAAA,EAAG;YAAwB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eAEN/G,OAAA;YAAK0G,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB3G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC1B3G,OAAA;gBAAK0G,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpC/G,OAAA;gBAAA2G,QAAA,gBACI3G,OAAA;kBAAK0G,SAAS,EAAC,aAAa;kBAAAC,QAAA,GACvB7F,SAAS,CAAC,CAAC,CAAC,CAAC8D,UAAU,EAAC,KAC7B;gBAAA;kBAAAgC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACN/G,OAAA;kBAAK0G,SAAS,EAAC,YAAY;kBAAAC,QAAA,EACtBlB,UAAU,CAAC3E,SAAS,CAAC,CAAC,CAAC,CAACsD,SAAS;gBAAC;kBAAAwC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACN/G,OAAA;cAAK0G,SAAS,EAAC,aAAa;cAAAC,QAAA,EACvB7F,SAAS,CAAC,CAAC,CAAC,CAAC+D,WAAW,IAAI/D,SAAS,CAAC,CAAC,CAAC,CAACgE,SAAS,IAAI;YAAe;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAGLnG,QAAQ,CAACqH,MAAM,GAAG,CAAC,iBAChBjI,OAAA;QAAK0G,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7B3G,OAAA;UAAK0G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3B3G,OAAA;YAAA2G,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB/G,OAAA;YAAA2G,QAAA,EAAG;UAAuC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eAEN/G,OAAA;UAAK0G,SAAS,EAAC,eAAe;UAAAC,QAAA,EACzB/F,QAAQ,CAACsH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACpCrI,OAAA;YAAiB0G,SAAS,EAAC,eAAe;YAAAC,QAAA,gBACtC3G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,EACzBlB,UAAU,CAAC2C,MAAM,CAAChE,SAAS;YAAC;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eACN/G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,EACzBR,cAAc,CAACiC,MAAM,CAAClE,gBAAgB;YAAC;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,eACN/G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,GACzByB,MAAM,CAAC5E,WAAW,EAAC,MAAC,EAAC4E,MAAM,CAACxE,eAAe,IAAI,GAAG;YAAA;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eACN/G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,GACzByB,MAAM,CAACvE,SAAS,EAAC,GAAC,EAACuE,MAAM,CAACtE,aAAa;YAAA;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA,GAZAsB,KAAK;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaV,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR,eAGD/G,OAAA;QAAK0G,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBAClC3G,OAAA;UAAK0G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3B3G,OAAA;YAAA2G,QAAA,EAAI;UAAgD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzD/G,OAAA;YAAA2G,QAAA,EAAG;UAA0D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eAEN/G,OAAA;UAAK0G,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxB3G,OAAA;YAAK0G,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACxB3G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC1B3G,OAAA;gBAAM0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvC/G,OAAA;gBAAA2G,QAAA,EAAI;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CAAC,eACN/G,OAAA;cAAK0G,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC3B3G,OAAA;gBAAA2G,QAAA,EAAG;cAA2G;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,EACjHrG,cAAc,iBACXV,OAAA;gBAAK0G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,GAAC,sBACX,EAACjG,cAAc,CAACmD,SAAS,EAAC,QAAM,EAACnD,cAAc,CAACoD,aAAa,eACjF9D,OAAA;kBAAA4G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,YACE,EAACuB,QAAQ,CAAC5H,cAAc,CAACmD,SAAS,CAAC,GAAG,EAAE,GAAG,sBAAsB,GAAG,0BAA0B;cAAA;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrG,CACR;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAEN/G,OAAA;YAAK0G,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACxB3G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC1B3G,OAAA;gBAAM0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACxC/G,OAAA;gBAAA2G,QAAA,EAAI;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,eACN/G,OAAA;cAAK0G,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC3B3G,OAAA;gBAAA2G,QAAA,EAAG;cAAkF;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,EACxFrG,cAAc,iBACXV,OAAA;gBAAK0G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,GAAC,WACtB,EAACjG,cAAc,CAAC8C,WAAW,EAAC,MAAC,EAAC9C,cAAc,CAACkD,eAAe,eACrE5D,OAAA;kBAAA4G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,YACE,EAACrG,cAAc,CAAC8C,WAAW,GAAG,EAAE,GAAG,sBAAsB,GAAG,oBAAoB;cAAA;gBAAAoD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CACR;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAEN/G,OAAA;YAAK0G,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACxB3G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC1B3G,OAAA;gBAAM0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvC/G,OAAA;gBAAA2G,QAAA,EAAI;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC,eACN/G,OAAA;cAAK0G,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC3B3G,OAAA;gBAAA2G,QAAA,EAAG;cAA+F;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,EACrGjG,SAAS,CAACmH,MAAM,GAAG,CAAC,iBACjBjI,OAAA;gBAAK0G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,GAAC,gBACjB,EAAC7F,SAAS,CAAC,CAAC,CAAC,CAAC8D,UAAU,EAAC,KACvC,eAAA5E,OAAA;kBAAA4G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,sBACY,EAACjG,SAAS,CAAC,CAAC,CAAC,CAAC8D,UAAU,GAAG,CAAC,GAAG,MAAM,GAAG,UAAU;cAAA;gBAAAgC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnE,CACR;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAEN/G,OAAA;YAAK0G,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACxB3G,OAAA;cAAK0G,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC1B3G,OAAA;gBAAM0G,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvC/G,OAAA;gBAAA2G,QAAA,EAAI;cAAqB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACN/G,OAAA;cAAK0G,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC3B3G,OAAA;gBAAA2G,QAAA,EAAG;cAAoF;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,EAC1FrG,cAAc,iBACXV,OAAA;gBAAK0G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,GAAC,cACnB,EAACjG,cAAc,CAACwD,gBAAgB,eAC5ClE,OAAA;kBAAA4G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACK,EAAC,CAAAxG,qBAAA,GAAAG,cAAc,CAACwD,gBAAgB,cAAA3D,qBAAA,eAA/BA,qBAAA,CAAiC+F,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,UAAU;cAAA;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnG,CACR;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,eACR,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACzG,EAAA,CAhgBQH,YAAY;AAAAoI,EAAA,GAAZpI,YAAY;AAkgBrB,eAAeA,YAAY;AAAC,IAAAoI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}