{"ast":null,"code":"var _jsxFileName = \"C:\\\\water\\\\chemical-dispersion-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport DispersionMap from './components/Map/DispersionMap';\nimport { apiService } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emergencyAlert, setEmergencyAlert] = useState(null);\n  const [systemStatus, setSystemStatus] = useState('online');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Load initial data and set up auto-refresh\n  useEffect(() => {\n    loadActiveSpills();\n\n    // Set up auto-refresh interval\n    let refreshInterval;\n    if (autoRefresh) {\n      refreshInterval = setInterval(() => {\n        loadActiveSpills(false); // Silent refresh\n      }, 60000); // Refresh every minute\n    }\n\n    // Set up real-time updates subscription\n    const unsubscribe = apiService.subscribeToUpdates(updates => {\n      handleRealTimeUpdates(updates);\n    });\n    return () => {\n      if (refreshInterval) clearInterval(refreshInterval);\n      if (unsubscribe) unsubscribe();\n    };\n  }, [autoRefresh]);\n  const loadActiveSpills = useCallback(async (showLoading = true) => {\n    console.log('Fetching active spills...');\n    if (showLoading) setLoading(true);\n    try {\n      // Use the newly defined method\n      const response = await apiService.getAllSpills();\n      setActiveSpills(response.data);\n      setSystemStatus('online');\n      setLastUpdate(new Date());\n      console.log('âœ… Spills loaded successfully.');\n    } catch (error) {\n      console.error('Error loading spills:', error);\n      setSystemStatus('offline');\n      console.warn('[WARNING] Failed to load spill data. Using offline mode.');\n      setEmergencyAlert({\n        title: 'API Connection Failed',\n        message: 'Could not connect to backend services. Displaying cached or mock data.',\n        type: 'error'\n      });\n      // Handle the error by perhaps using mock data\n      setActiveSpills([]);\n    } finally {\n      if (showLoading) setLoading(false);\n    }\n  }, []);\n  const handleRealTimeUpdates = updates => {\n    console.log('Received real-time updates:', updates);\n    setActiveSpills(currentSpills => {\n      const updatedSpills = [...currentSpills];\n      updates.forEach(update => {\n        const index = updatedSpills.findIndex(spill => spill.id === update.id);\n        if (index !== -1) {\n          // Update existing spill\n          updatedSpills[index] = update;\n        } else {\n          // Add new spill\n          updatedSpills.push(update);\n        }\n      });\n      return updatedSpills;\n    });\n  };\n  const handleSelectSpill = spill => {\n    setSelectedSpill(spill);\n  };\n  const handleDeselectSpill = () => {\n    setSelectedSpill(null);\n  };\n  const handleCreateSpill = async spillData => {\n    setLoading(true);\n    try {\n      await apiService.createSpill(spillData);\n      loadActiveSpills(false); // Silent refresh\n      return true;\n    } catch (error) {\n      console.error('Failed to create spill:', error);\n      alert('Failed to create spill: ' + error.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMarkContained = async spillId => {\n    setLoading(true);\n    try {\n      await apiService.updateSpillStatus(spillId, 'CONTAINED');\n      loadActiveSpills(false); // Silent refresh\n      alert('Spill marked as contained!');\n    } catch (error) {\n      console.error('Failed to update spill status:', error);\n      alert('Failed to update spill status: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEmergencyAlert = () => {\n    alert('Emergency Alert Triggered! Notifying authorities.');\n  };\n  const handleAutoRefreshToggle = isEnabled => {\n    setAutoRefresh(isEnabled);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"app-title\",\n          children: \"\\uD83D\\uDCA7 Water Dispersion App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"app-nav\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\",\n            label: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/map\",\n            label: \"Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/create-spill\",\n            label: \"New Spill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), emergencyAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emergency-alert ${emergencyAlert.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [emergencyAlert.title, \": \", emergencyAlert.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEmergencyAlert(null),\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"app-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              spills: activeSpills,\n              onSpillSelect: handleSelectSpill,\n              onCreate: handleCreateSpill,\n              onMarkContained: handleMarkContained\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/map\",\n            element: /*#__PURE__*/_jsxDEV(DispersionMap, {\n              spills: activeSpills,\n              onSpillSelect: handleSelectSpill,\n              selectedSpill: selectedSpill\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/create-spill\",\n            element: /*#__PURE__*/_jsxDEV(SpillForm, {\n              onCreate: handleCreateSpill\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/weather\",\n            element: /*#__PURE__*/_jsxDEV(WeatherPanel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settings\",\n            element: /*#__PURE__*/_jsxDEV(SettingsPage, {\n              autoRefresh: autoRefresh,\n              onAutoRefreshToggle: handleAutoRefreshToggle,\n              systemStatus: systemStatus,\n              lastUpdate: lastUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom NavLink component for styling\n_s(App, \"0y3H2U5sRxKUUm1GiVnJZS6+Wtg=\");\n_c = App;\nfunction NavLink({\n  to,\n  label\n}) {\n  _s2();\n  const location = useLocation();\n  const isActive = location.pathname === to;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: to,\n    className: `nav-link ${isActive ? 'active' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n// Simple settings page component\n_s2(NavLink, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = NavLink;\nfunction SettingsPage({\n  autoRefresh,\n  onAutoRefreshToggle,\n  systemStatus,\n  lastUpdate\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"System Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Configure system behavior and monitoring options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"setting-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: autoRefresh,\n            onChange: e => onAutoRefreshToggle(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Auto-refresh data every minute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"System Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: systemStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Update: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: lastUpdate.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data Sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"data-sources\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Weather Data: weather.gov API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Tidal Data: NOAA Tides & Currents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Chemical Data: PubChem Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SettingsPage;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"NavLink\");\n$RefreshReg$(_c3, \"SettingsPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Routes","Route","Navigate","Link","useLocation","Dashboard","SpillForm","WeatherPanel","DispersionMap","apiService","jsxDEV","_jsxDEV","App","_s","activeSpills","setActiveSpills","selectedSpill","setSelectedSpill","loading","setLoading","emergencyAlert","setEmergencyAlert","systemStatus","setSystemStatus","lastUpdate","setLastUpdate","autoRefresh","setAutoRefresh","loadActiveSpills","refreshInterval","setInterval","unsubscribe","subscribeToUpdates","updates","handleRealTimeUpdates","clearInterval","showLoading","console","log","response","getAllSpills","data","Date","error","warn","title","message","type","currentSpills","updatedSpills","forEach","update","index","findIndex","spill","id","push","handleSelectSpill","handleDeselectSpill","handleCreateSpill","spillData","createSpill","alert","handleMarkContained","spillId","updateSpillStatus","handleEmergencyAlert","handleAutoRefreshToggle","isEnabled","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","NavLink","label","onClick","path","element","spills","onSpillSelect","onCreate","onMarkContained","SettingsPage","onAutoRefreshToggle","_c","_s2","location","isActive","pathname","_c2","checked","onChange","e","target","toLocaleString","_c3","$RefreshReg$"],"sources":["C:/water/chemical-dispersion-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, Link, useLocation } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport SpillForm from './components/Forms/SpillForm';\nimport WeatherPanel from './components/Weather/WeatherPanel';\nimport DispersionMap from './components/Map/DispersionMap';\nimport { apiService } from './services/api';\nimport './App.css';\n\nfunction App() {\n  const [activeSpills, setActiveSpills] = useState([]);\n  const [selectedSpill, setSelectedSpill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emergencyAlert, setEmergencyAlert] = useState(null);\n  const [systemStatus, setSystemStatus] = useState('online');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Load initial data and set up auto-refresh\n  useEffect(() => {\n    loadActiveSpills();\n    \n    // Set up auto-refresh interval\n    let refreshInterval;\n    if (autoRefresh) {\n      refreshInterval = setInterval(() => {\n        loadActiveSpills(false); // Silent refresh\n      }, 60000); // Refresh every minute\n    }\n\n    // Set up real-time updates subscription\n    const unsubscribe = apiService.subscribeToUpdates((updates) => {\n      handleRealTimeUpdates(updates);\n    });\n\n    return () => {\n      if (refreshInterval) clearInterval(refreshInterval);\n      if (unsubscribe) unsubscribe();\n    };\n  }, [autoRefresh]);\n\n  const loadActiveSpills = useCallback(async (showLoading = true) => {\n    console.log('Fetching active spills...');\n    if (showLoading) setLoading(true);\n    try {\n      // Use the newly defined method\n      const response = await apiService.getAllSpills();\n      setActiveSpills(response.data);\n      setSystemStatus('online');\n      setLastUpdate(new Date());\n      console.log('âœ… Spills loaded successfully.');\n    } catch (error) {\n      console.error('Error loading spills:', error);\n      setSystemStatus('offline');\n      console.warn('[WARNING] Failed to load spill data. Using offline mode.');\n      setEmergencyAlert({\n        title: 'API Connection Failed',\n        message: 'Could not connect to backend services. Displaying cached or mock data.',\n        type: 'error'\n      });\n      // Handle the error by perhaps using mock data\n      setActiveSpills([]);\n    } finally {\n      if (showLoading) setLoading(false);\n    }\n  }, []);\n\n  const handleRealTimeUpdates = (updates) => {\n    console.log('Received real-time updates:', updates);\n    setActiveSpills(currentSpills => {\n      const updatedSpills = [...currentSpills];\n      updates.forEach(update => {\n        const index = updatedSpills.findIndex(spill => spill.id === update.id);\n        if (index !== -1) {\n          // Update existing spill\n          updatedSpills[index] = update;\n        } else {\n          // Add new spill\n          updatedSpills.push(update);\n        }\n      });\n      return updatedSpills;\n    });\n  };\n\n  const handleSelectSpill = (spill) => {\n    setSelectedSpill(spill);\n  };\n\n  const handleDeselectSpill = () => {\n    setSelectedSpill(null);\n  };\n\n  const handleCreateSpill = async (spillData) => {\n    setLoading(true);\n    try {\n      await apiService.createSpill(spillData);\n      loadActiveSpills(false); // Silent refresh\n      return true;\n    } catch (error) {\n      console.error('Failed to create spill:', error);\n      alert('Failed to create spill: ' + error.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMarkContained = async (spillId) => {\n    setLoading(true);\n    try {\n      await apiService.updateSpillStatus(spillId, 'CONTAINED');\n      loadActiveSpills(false); // Silent refresh\n      alert('Spill marked as contained!');\n    } catch (error) {\n      console.error('Failed to update spill status:', error);\n      alert('Failed to update spill status: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEmergencyAlert = () => {\n    alert('Emergency Alert Triggered! Notifying authorities.');\n  };\n\n  const handleAutoRefreshToggle = (isEnabled) => {\n    setAutoRefresh(isEnabled);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <Link to=\"/\" className=\"app-title\">ðŸ’§ Water Dispersion App</Link>\n          <nav className=\"app-nav\">\n            <NavLink to=\"/\" label=\"Dashboard\" />\n            <NavLink to=\"/map\" label=\"Map\" />\n            <NavLink to=\"/create-spill\" label=\"New Spill\" />\n          </nav>\n        </header>\n\n        {emergencyAlert && (\n          <div className={`emergency-alert ${emergencyAlert.type}`}>\n            <p>{emergencyAlert.title}: {emergencyAlert.message}</p>\n            <button onClick={() => setEmergencyAlert(null)}>Dismiss</button>\n          </div>\n        )}\n\n        <main className=\"app-content\">\n          <Routes>\n            <Route path=\"/\" element={<Dashboard spills={activeSpills} onSpillSelect={handleSelectSpill} onCreate={handleCreateSpill} onMarkContained={handleMarkContained} />} />\n            <Route path=\"/map\" element={<DispersionMap spills={activeSpills} onSpillSelect={handleSelectSpill} selectedSpill={selectedSpill} />} />\n            <Route path=\"/create-spill\" element={<SpillForm onCreate={handleCreateSpill} />} />\n            <Route path=\"/weather\" element={<WeatherPanel />} />\n            <Route path=\"/settings\" element={<SettingsPage autoRefresh={autoRefresh} onAutoRefreshToggle={handleAutoRefreshToggle} systemStatus={systemStatus} lastUpdate={lastUpdate} />} />\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\n// Custom NavLink component for styling\nfunction NavLink({ to, label }) {\n  const location = useLocation();\n  const isActive = location.pathname === to;\n  return (\n    <Link to={to} className={`nav-link ${isActive ? 'active' : ''}`}>\n      <span className=\"label\">{label}</span>\n    </Link>\n  );\n}\n\n// Simple settings page component\nfunction SettingsPage({ autoRefresh, onAutoRefreshToggle, systemStatus, lastUpdate }) {\n  return (\n    <div className=\"settings-page\">\n      <div className=\"settings-header\">\n        <h2>System Settings</h2>\n        <p>Configure system behavior and monitoring options</p>\n      </div>\n      \n      <div className=\"settings-content\">\n        <div className=\"settings-section\">\n          <h3>Data Refresh</h3>\n          <label className=\"setting-item\">\n            <input\n              type=\"checkbox\"\n              checked={autoRefresh}\n              onChange={(e) => onAutoRefreshToggle(e.target.checked)}\n            />\n            <span>Auto-refresh data every minute</span>\n          </label>\n        </div>\n        \n        <div className=\"settings-section\">\n          <h3>System Status</h3>\n          <div className=\"status-info\">\n            <p>Current Status: <strong>{systemStatus}</strong></p>\n            {lastUpdate && (\n              <p>Last Update: <strong>{lastUpdate.toLocaleString()}</strong></p>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"settings-section\">\n          <h3>Data Sources</h3>\n          <ul className=\"data-sources\">\n            <li>Weather Data: weather.gov API</li>\n            <li>Tidal Data: NOAA Tides & Currents</li>\n            <li>Chemical Data: PubChem Database</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACtG,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,QAAQ,CAAC;EAC1D,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACdgC,gBAAgB,CAAC,CAAC;;IAElB;IACA,IAAIC,eAAe;IACnB,IAAIH,WAAW,EAAE;MACfG,eAAe,GAAGC,WAAW,CAAC,MAAM;QAClCF,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC3B,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACb;;IAEA;IACA,MAAMG,WAAW,GAAGtB,UAAU,CAACuB,kBAAkB,CAAEC,OAAO,IAAK;MAC7DC,qBAAqB,CAACD,OAAO,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIJ,eAAe,EAAEM,aAAa,CAACN,eAAe,CAAC;MACnD,IAAIE,WAAW,EAAEA,WAAW,CAAC,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,MAAME,gBAAgB,GAAG/B,WAAW,CAAC,OAAOuC,WAAW,GAAG,IAAI,KAAK;IACjEC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,IAAIF,WAAW,EAAEjB,UAAU,CAAC,IAAI,CAAC;IACjC,IAAI;MACF;MACA,MAAMoB,QAAQ,GAAG,MAAM9B,UAAU,CAAC+B,YAAY,CAAC,CAAC;MAChDzB,eAAe,CAACwB,QAAQ,CAACE,IAAI,CAAC;MAC9BlB,eAAe,CAAC,QAAQ,CAAC;MACzBE,aAAa,CAAC,IAAIiB,IAAI,CAAC,CAAC,CAAC;MACzBL,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CpB,eAAe,CAAC,SAAS,CAAC;MAC1Bc,OAAO,CAACO,IAAI,CAAC,0DAA0D,CAAC;MACxEvB,iBAAiB,CAAC;QAChBwB,KAAK,EAAE,uBAAuB;QAC9BC,OAAO,EAAE,wEAAwE;QACjFC,IAAI,EAAE;MACR,CAAC,CAAC;MACF;MACAhC,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,SAAS;MACR,IAAIqB,WAAW,EAAEjB,UAAU,CAAC,KAAK,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,qBAAqB,GAAID,OAAO,IAAK;IACzCI,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEL,OAAO,CAAC;IACnDlB,eAAe,CAACiC,aAAa,IAAI;MAC/B,MAAMC,aAAa,GAAG,CAAC,GAAGD,aAAa,CAAC;MACxCf,OAAO,CAACiB,OAAO,CAACC,MAAM,IAAI;QACxB,MAAMC,KAAK,GAAGH,aAAa,CAACI,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC;QACtE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;UAChB;UACAH,aAAa,CAACG,KAAK,CAAC,GAAGD,MAAM;QAC/B,CAAC,MAAM;UACL;UACAF,aAAa,CAACO,IAAI,CAACL,MAAM,CAAC;QAC5B;MACF,CAAC,CAAC;MACF,OAAOF,aAAa;IACtB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,iBAAiB,GAAIH,KAAK,IAAK;IACnCrC,gBAAgB,CAACqC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;IAChCzC,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAM0C,iBAAiB,GAAG,MAAOC,SAAS,IAAK;IAC7CzC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMV,UAAU,CAACoD,WAAW,CAACD,SAAS,CAAC;MACvChC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MACzB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CmB,KAAK,CAAC,0BAA0B,GAAGnB,KAAK,CAACG,OAAO,CAAC;MACjD,OAAO,KAAK;IACd,CAAC,SAAS;MACR3B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4C,mBAAmB,GAAG,MAAOC,OAAO,IAAK;IAC7C7C,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMV,UAAU,CAACwD,iBAAiB,CAACD,OAAO,EAAE,WAAW,CAAC;MACxDpC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MACzBkC,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDmB,KAAK,CAAC,iCAAiC,GAAGnB,KAAK,CAACG,OAAO,CAAC;IAC1D,CAAC,SAAS;MACR3B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM+C,oBAAoB,GAAGA,CAAA,KAAM;IACjCJ,KAAK,CAAC,mDAAmD,CAAC;EAC5D,CAAC;EAED,MAAMK,uBAAuB,GAAIC,SAAS,IAAK;IAC7CzC,cAAc,CAACyC,SAAS,CAAC;EAC3B,CAAC;EAED,oBACEzD,OAAA,CAACZ,MAAM;IAAAsE,QAAA,eACL1D,OAAA;MAAK2D,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClB1D,OAAA;QAAQ2D,SAAS,EAAC,YAAY;QAAAD,QAAA,gBAC5B1D,OAAA,CAACR,IAAI;UAACoE,EAAE,EAAC,GAAG;UAACD,SAAS,EAAC,WAAW;UAAAD,QAAA,EAAC;QAAuB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjEhE,OAAA;UAAK2D,SAAS,EAAC,SAAS;UAAAD,QAAA,gBACtB1D,OAAA,CAACiE,OAAO;YAACL,EAAE,EAAC,GAAG;YAACM,KAAK,EAAC;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpChE,OAAA,CAACiE,OAAO;YAACL,EAAE,EAAC,MAAM;YAACM,KAAK,EAAC;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjChE,OAAA,CAACiE,OAAO;YAACL,EAAE,EAAC,eAAe;YAACM,KAAK,EAAC;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAERvD,cAAc,iBACbT,OAAA;QAAK2D,SAAS,EAAE,mBAAmBlD,cAAc,CAAC2B,IAAI,EAAG;QAAAsB,QAAA,gBACvD1D,OAAA;UAAA0D,QAAA,GAAIjD,cAAc,CAACyB,KAAK,EAAC,IAAE,EAACzB,cAAc,CAAC0B,OAAO;QAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvDhE,OAAA;UAAQmE,OAAO,EAAEA,CAAA,KAAMzD,iBAAiB,CAAC,IAAI,CAAE;UAAAgD,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CACN,eAEDhE,OAAA;QAAM2D,SAAS,EAAC,aAAa;QAAAD,QAAA,eAC3B1D,OAAA,CAACX,MAAM;UAAAqE,QAAA,gBACL1D,OAAA,CAACV,KAAK;YAAC8E,IAAI,EAAC,GAAG;YAACC,OAAO,eAAErE,OAAA,CAACN,SAAS;cAAC4E,MAAM,EAAEnE,YAAa;cAACoE,aAAa,EAAEzB,iBAAkB;cAAC0B,QAAQ,EAAExB,iBAAkB;cAACyB,eAAe,EAAErB;YAAoB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACrKhE,OAAA,CAACV,KAAK;YAAC8E,IAAI,EAAC,MAAM;YAACC,OAAO,eAAErE,OAAA,CAACH,aAAa;cAACyE,MAAM,EAAEnE,YAAa;cAACoE,aAAa,EAAEzB,iBAAkB;cAACzC,aAAa,EAAEA;YAAc;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvIhE,OAAA,CAACV,KAAK;YAAC8E,IAAI,EAAC,eAAe;YAACC,OAAO,eAAErE,OAAA,CAACL,SAAS;cAAC6E,QAAQ,EAAExB;YAAkB;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnFhE,OAAA,CAACV,KAAK;YAAC8E,IAAI,EAAC,UAAU;YAACC,OAAO,eAAErE,OAAA,CAACJ,YAAY;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpDhE,OAAA,CAACV,KAAK;YAAC8E,IAAI,EAAC,WAAW;YAACC,OAAO,eAAErE,OAAA,CAAC0E,YAAY;cAAC3D,WAAW,EAAEA,WAAY;cAAC4D,mBAAmB,EAAEnB,uBAAwB;cAAC7C,YAAY,EAAEA,YAAa;cAACE,UAAU,EAAEA;YAAW;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjLhE,OAAA,CAACV,KAAK;YAAC8E,IAAI,EAAC,GAAG;YAACC,OAAO,eAAErE,OAAA,CAACT,QAAQ;cAACqE,EAAE,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;;AAEA;AAAA9D,EAAA,CA3JSD,GAAG;AAAA2E,EAAA,GAAH3E,GAAG;AA4JZ,SAASgE,OAAOA,CAAC;EAAEL,EAAE;EAAEM;AAAM,CAAC,EAAE;EAAAW,GAAA;EAC9B,MAAMC,QAAQ,GAAGrF,WAAW,CAAC,CAAC;EAC9B,MAAMsF,QAAQ,GAAGD,QAAQ,CAACE,QAAQ,KAAKpB,EAAE;EACzC,oBACE5D,OAAA,CAACR,IAAI;IAACoE,EAAE,EAAEA,EAAG;IAACD,SAAS,EAAE,YAAYoB,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;IAAArB,QAAA,eAC9D1D,OAAA;MAAM2D,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAEQ;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEX;;AAEA;AAAAa,GAAA,CAVSZ,OAAO;EAAA,QACGxE,WAAW;AAAA;AAAAwF,GAAA,GADrBhB,OAAO;AAWhB,SAASS,YAAYA,CAAC;EAAE3D,WAAW;EAAE4D,mBAAmB;EAAEhE,YAAY;EAAEE;AAAW,CAAC,EAAE;EACpF,oBACEb,OAAA;IAAK2D,SAAS,EAAC,eAAe;IAAAD,QAAA,gBAC5B1D,OAAA;MAAK2D,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC9B1D,OAAA;QAAA0D,QAAA,EAAI;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhE,OAAA;QAAA0D,QAAA,EAAG;MAAgD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eAENhE,OAAA;MAAK2D,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/B1D,OAAA;QAAK2D,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC/B1D,OAAA;UAAA0D,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBhE,OAAA;UAAO2D,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC7B1D,OAAA;YACEoC,IAAI,EAAC,UAAU;YACf8C,OAAO,EAAEnE,WAAY;YACrBoE,QAAQ,EAAGC,CAAC,IAAKT,mBAAmB,CAACS,CAAC,CAACC,MAAM,CAACH,OAAO;UAAE;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACFhE,OAAA;YAAA0D,QAAA,EAAM;UAA8B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENhE,OAAA;QAAK2D,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC/B1D,OAAA;UAAA0D,QAAA,EAAI;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBhE,OAAA;UAAK2D,SAAS,EAAC,aAAa;UAAAD,QAAA,gBAC1B1D,OAAA;YAAA0D,QAAA,GAAG,kBAAgB,eAAA1D,OAAA;cAAA0D,QAAA,EAAS/C;YAAY;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EACrDnD,UAAU,iBACTb,OAAA;YAAA0D,QAAA,GAAG,eAAa,eAAA1D,OAAA;cAAA0D,QAAA,EAAS7C,UAAU,CAACyE,cAAc,CAAC;YAAC;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAClE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENhE,OAAA;QAAK2D,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC/B1D,OAAA;UAAA0D,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBhE,OAAA;UAAI2D,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC1B1D,OAAA;YAAA0D,QAAA,EAAI;UAA6B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtChE,OAAA;YAAA0D,QAAA,EAAI;UAAiC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1ChE,OAAA;YAAA0D,QAAA,EAAI;UAA+B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACuB,GAAA,GA1CQb,YAAY;AA4CrB,eAAezE,GAAG;AAAC,IAAA2E,EAAA,EAAAK,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}